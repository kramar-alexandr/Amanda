external inner procedure RateField(real,real,real,string,integer,string,boolean,real,real,string,boolean);
external inner procedure GetCurUser(var record UserVc);
external inner function string 60 UserDefined(string,string);
external inner function Boolean CheckOffLineRecords(Boolean);
external inner function Boolean UseTaxTemplatesforTaxCalc();
external inner function string 20 GetMenuCode(string);

external inner function Boolean HasCharts();

external inner function Boolean DisplayLoginKeyPad_ENG();
external inner function string 255 VATZoneEditFieldLabel_ENG(Integer);
external inner function real VATZoneButtonsLabelsENG(real,real,real,real);
external inner function string 255 VATZoneNameENG();

external inner function Boolean IsEnterprise();
external inner function Boolean StandardHansa();

external inner function Boolean HasBase2();
external inner function Boolean HasExtTax();
external inner function Boolean HasJewelleryInterface();
external inner function Boolean HasItemClassification();
external inner function Boolean HasLanguages();
external inner function Boolean HasMultiCurrency();
external inner function Boolean HasMultiLocations();
external inner function Boolean HasObjects();
external inner function Boolean HasPriceLists();
external inner function Boolean HasReturnedGoods();
external inner function Boolean HasSerialNumbers();
external inner function Boolean HasTaxMatrix();
external inner function Boolean HasVATZone();
external inner function Boolean HasWithholdingTax();

external inner function Boolean HasModCRM();
external inner function Boolean HasModIN();
external inner function Boolean HasModNL();
external inner function Boolean HasModPO();
external inner function Boolean HasModProd();
external inner function Boolean HasModRest();
external inner function Boolean HasModSL();
external inner function Boolean HasModSVO();
external inner function Boolean HasIntegratedNL();
external inner function real VATZoneButtonsLabelsLIT(real,real,real,real);
external inner function string 255 VATZoneNameLIT();
external inner function string 255 VATZoneEditFieldLabel_LIT(Integer);

external inner function Boolean HasVarieties();
external inner function Boolean HasSalesGroup();
external inner function Boolean HasTREO();
external inner function Boolean HasApprovals();
external inner function Boolean HasDownpayments();
external inner function Boolean HasEMail();
external inner function Boolean HasModTS();
external inner function Boolean HasCommunicator();
external inner function Boolean HasOfficialSerNr();
external inner function Boolean HasModSO();
external inner function Boolean HasAdvancedCRM();
external inner function Boolean HasSalesman();
external inner function Boolean HasSalesmanBonus();
external inner function Boolean HasStandardCRM();
external inner function Boolean HasCustItem();
external inner function Boolean HasRoute();
external inner function Boolean HasAdvancedPricing();
external inner function Boolean HasCountryPerCustomer();
external inner function Boolean HasCustomerStatusReport();
external inner function Boolean HasAvalara();
external inner function Boolean HasModPOS();
external inner function Boolean HasModCredMan();

SetLangMode(LangLithuanian,"LIT",2);

window SVOSerDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,t,v,vs;
  WindowBegin("Žinomi serijiniai nr.",SVOSerDClass,CGview,SVOSerView);
  SetWRect(20,80,552,600);
  UseView(SVOSerVc);
  v = 6; vs = 20; h = 120; h2 = 290;
  Tile(0,90,false,"",ItemCode);
  EditField(h,v, 100,"Prekė",Normal,ItemCode,false,INSClass);
  EditField(h2,v,-40,"Ser. nr.",Normal,SerialNr,false,0);
  EditField(h,v+=vs,-40,"Aprašymas",Normal,ItemName,false,0);
  EditField(h,v+=vs,100,"Pirkėjas",Normal,CustCode,false,CUSClass);
  EditField(h2,v,-40,"Pavadinimas",Normal,CustName,false,0);
  h2 = 350;
  TileButton(1,"Pagrindinis");
  TileButton(2,"Garantijos informacija");
  TileButton(3,"Dalys detaliai");
  Tile(1,170,false,"",SoldDate);
  EditField(h,v=6,110,"Parduota",Normal,SoldDate,false,PasteCurDate);
  EditField(h2,v,-40,"Garantijos vienetas",Normal,WarrantyUntil,false,PasteCurDate);
  EditField(h,v+=vs,110,"Pardavimų kaina",Normal,SalesPrice,true,0);
  EditField(h2,v,-40,"Savikaina",Normal,CostPrice,true,0);
  EditField(h,v+=vs,110,"Tiekėjas",Normal,VECode,false,VESClass);
  EditField(h2,v,-40,"Motinos Nr.",Normal,MotherNr,false,SVOSerSClass);
  EditField(h,v+=vs,110,"Paskutinė GSX užklausa",Normal,LastGSXQuery,true,0);
  EditField(h2,v,-40,"Price List",Normal,PLCode,false,PLDefSClass);// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 27 09 201815:26:18

  Tile(2,450,false,"",ProductDescription);

  EditField(h,v=6,-40,"Produkto apraš.",Normal,ProductDescription,false,0);
  EditField(h,v+=vs,-40,"Nustat. aprašymą",Normal,ConfigDescription,false,0);
  EditField(h,v+=vs,110,"Pirkimo šalis",Normal,PurchaseCountry,false,0);
  EditField(h2,v,-40,"Pirkimo data",Normal,EstimatedPurchaseDate,true,PasteCurDate);
  CheckBox(h,v+=vs,0,"Asmeniniai",Personalized);

  CheckBox(h,v+=vs,0,"Globali garantija",GlobalWarranty);
  CheckBox(h2,v,0,"Apribota garantija",LimitedWarranty);
  EditField(h,v+=vs,-40,"Garantijos būklė",Normal,WarrantyStatus,false,0);

  EditField(h,v+=vs,110,"Registracijos data",Normal,RegistrationDate,true,PasteCurDate);
  EditField(h2,v,-40,"Garantijos nuor. nr.",Normal,WarrantyRefNo,false,0);

  EditField(h,v+=vs,110,"Garantijos forma",Normal,CoverageStartDate,true,PasteCurDate);
  EditField(h2,v,-40,"Garantijos vienetas",Normal,WarrantyUntil,true,PasteCurDate);
  EditField(h,v+=vs,110,"Onsite forma",Normal,OnsiteStartDate,true,PasteCurDate);
  EditField(h2,v,-40,"Onsite vienetas",Normal,OnsiteEndDate,true,PasteCurDate);
  EditField(h,v+=vs,110,"CS kodas",Normal,CSCode,false,0);
  EditField(h2,v,-40,"CS tipas",Normal,CSType,false,0);

  CheckBox(h,v+=vs,0,"Powertrain",PowerTrainFlag); //!!SAMETRANSLATION
  CheckBox(h,v+=vs,0,"TriCare",TriCareFlag); //!!SAMETRANSLATION
  CheckBox(h2,v,0,"Ecorath",EcorathFlag); //!!SAMETRANSLATION

  EditField(h,v+=vs,110,"Kontrakto tipas",Normal,ContractType,false,0);
  EditField(h,v+=vs,110,"Kontrakto forma",Normal,ContractCoverageStartDate,true,PasteCurDate);
  EditField(h2,v,-40,"Kontrakto vienetas",Normal,ContractCoverageEndDate,true,PasteCurDate);
  EditField(h,v+=vs,-40,"SLA grupės apraš.",Normal,SLAGroupDesc,false,0);

  CheckBox(h,v+=vs,0,"Darbas padengiamas",LaborCovered);
  CheckBox(h2,v,0,"Pusiau padengtas",PartCovered);

  EditField(h,v+=vs,-40,"Paveikslėlis",Normal,ImageURL,false,0);
  EditField(h,v+=vs,-40,"Išplėstas vaizdas",Normal,ExplodedViewURL,false,0);
  EditField(h,v+=vs,-40,"Rankinis",Normal,ManualURL,false,0);

  EditField(h,v+=vs,110,"Sutarites apim. pradžia",Normal,ContractCoverageStartDate,true,PasteCurDate); 
  EditField(h2,v,-40,"Sutarties apim. pabaiga",Normal,ContractCoverageEndDate,true,PasteCurDate); 

  EditField(h,v+=vs,110,"APP Agr. Nr.",Normal,APPAgreementNumber,true,0);  
  EditField(h2,v,-40,"APP Iš viso",Normal,APPTotalFromOrder,true,0); 

  EditField(h,v+=vs,-40,"APP pranešimas",Normal,APPCoverageDurationStatement,true,0); 

  Tile(3,200,false,"",Math);
  v = 24;
  MatrixBegin(20,v,-40,-10,-,999);
  Flip(0);
  MatCol(t=1,32,"Dalies nr.",0,PartNumber,false,0);
  Flip(1);
  MatCol(t,120,"Dalies apr.",0,PartDescription,false,0);
  MatCol(t,-180,"Savikaina",0,StockPrice,true,0);
  MatCol(t,-90,"Pakeitimo kaina",0,ExchangePrice,true,0);
  Flip(2);
  MatCol(t,120,"Dalies tipas",0,PartType,false,0);
  MatCol(t,-190,"Komp. kodas",0,ComponentCode,false,0);
  MatCol(t,-110,"Orig. dal. Nr.",0,OriginalPartNumber,false,0);
  Flip(3);
  MatCol(t,120,"EEE kodas",0,EEECode,false,0);
  MatCol(t,-130,"Darbo eilė",0,LaborTier,false,0);
  MatCol(t,-40,"Serija",0,IsSerialized,false,0);
  EndMatrix;
  vs = 20;
  v = 18; VTab(-25,v,-6,v+vs,ToolFlip,1,"A");
  v=v+vs; VTab(-25,v,-6,v+vs,ToolFlip,2,"B");
    v=v+vs; VTab(-25,v,-6,v+vs,ToolFlip,3,"C");
  SpecialMenu("Atidaryti pasirinktą nuorodą tinklapyje",'w',1,"OpenLinkSVOSerDsm");
//    SpecialMenu("Atnaujinti dalių kainas iš garantinių čekių",' ',2,"PartsLookupSVOSerDsm");
      SpecialMenu("Ieškoti dalių",'l',2,"PartsLookupSVOSerDsm");
  SpecialMenu("Serijinio numerio istorija",'h',3,"SerHistSVOSerDsm"); 
  EndWindow;
end;

window WSDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,t,v,vm,vs;
  Integer rn,tilenr,flipnr,f;
  
  WindowBegin("Darbo kortelė",WSDClass,CGview,WSView); 
  SetWRect(20,80,750,460);
  Sizeable(512,-1,0,0);
  UseView(WSVc);
  FormName(WSForm);
  h1 = 75;h2 = 290; h3 = 470; vs = 20;
  Tile(0,70,false,"",CustCode); 
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass); 
  EditField(75,v+=20,95,"Pirkėjas",Normal,CustCode,false,CUSClass); 
  EditField(h=240,v=vm,-40,"Vardas",Normal,Addr0,false,0); 
  v = v+vs;
  CheckBox(h4=-100,v,0,"OK",OKFlag);
  tilenr = 1;
  TileButton(tilenr,"Data"); tilenr = tilenr + 1;
  TileButton(tilenr,"Prekės"); tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Valiuta"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Kontaktas"); tilenr = tilenr + 1;
  TileButton(tilenr,"Komentaras"); tilenr = tilenr + 1;
  tilenr = 1;
  Tile(tilenr,90,false,tilenr,TransDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Darbuotojas",Normal,EMCode,false,UserSClass); 
  EditField(h1,v+=vs,82,"Data",Normal,TransDate,false,PasteCurDate);
  if (HasMultiLocations) then begin 
    EditField(h1,v+=vs,82,"Patalpa",Normal,Location,false,LocationSClass); 
  end;
  EditField(h1,v+=vs,82,"Trumpas",Normal,ACShort,false,ACShortSClass); 
  EditField(h2,v=vm,135,"Darbuotojo vardas",Normal,EMName,false,0); 
  EditField(h2,v+=vs,135,"Kont. asmuo",Normal,CustContact,false,ContactSClass); 
  EditField(h2,v+=vs,135,"Savik. sąsk.",Normal,CostAcc,false,AccSClass); 
  if (HasObjects) then begin
    EditField(h2,v+=vs,135,"Objektai",Normal,Objects,false,ObjSClass);
  end; 
  EditField(h3,v=vm,82,"Pasl. užs. Nr.",Normal,SVONr,false,0); 
  if (HasModSVO) then begin
    EditField(h3,v+=vs,82,"Darbo užs. Nr.",Normal,WONr,false,0);
  end;
  if (HasModIN) then begin
    CheckBox(h4,v=vm,0,"Atnaujinti sandėlį",UpdStockFlag); 
  end;
  if (IsEnterprise) then begin
    CheckBox(h4,v+=16,0,"Rezervuota",PrelOK); 
  end;
/* What is this???, It can be changed by the user and what if half is invoiced ?? */
//  CheckBox(h4,v+=16,0,"Invoiced",InvFlag);
  EnterSkip(Math);
  Tile(tilenr,120,true,tilenr,Math); tilenr = tilenr + 1;
  EditField(410,-41,95,"PVM",ViewOnly ,Sum3,true,0); 
  EditField(-150,-41,95,"Tarpinė suma",ViewOnly ,Sum1,true,0); 
  EditField(-150,-21,95,"VISO",ViewOnly ,Sum4,true,0); 
  v = 24;
  MatrixBegin(3,v,-50,-40,WSRowType,200);
  MatTypedRow(stp);
  Flip(0);
  MatCol(t=1,32,"Prekė",0,ArtCode,false,INSClass);
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
	MatCol(t,94,"Pradžios laikas",0,sTime,true,PasteCurTime);// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 27 09 2018 y. о 16:58:48
	MatCol(t,150,"Pabaigos laikas",0,eTime,true,PasteCurTime);// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 27 09 2018 y. о 16:58:50
  MatCol(t,205,"Kiekis",0,Quant,true,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 13 November 2018 16:45:45
  EnterSkip(ArtCode);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(t=1,244,"Aprašymas",0,Spec,false,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 13 November 2018 16:45:49
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-255,"Vnt. kaina",0,Price,true,0); 
    MatCol(t,-165,"%",0,vRebate,true,0); 
    MatCol(t,-130,"Suma",0,Sum,true,0); 
    MatCol(1,-60,"T-Cd",0,TaxTemplateCode,false,TaxTemplateSClass);  //!!SAMETRANSLATION
  end else begin
  MatCol(t,-225,"Vnt. kaina",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
    MatCol(1,-30,"PVM kd.",0,VATCode,false,VATCodeSClass); 
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(t=1,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-225,"Prekės tipas",0,ItemType,false,SetSClass);
  MatCol(t,-150,"Pagrindinis nr.",0,MotherNr,false,SerialNrSClass);
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(t=1,144,"Aprašymas",0,Spec,false,0);
  if (HasSerialNumbers) then begin
    MatCol(t,-225,"Serijinis nr.",0,SerialNr,false,SerialNrSClass);
  end;
  if (HasModProd) then begin
    MatCol(t,-90,"Ruošinys",0,Recepy,false,RecSClass);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  MatCol(t=1,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-345,"Grąžinta",0,Returned,true,0); 
  MatCol(t,-285,"Faktūruota",0,Invd,true,0); 
  MatCol(t,-225,"FIFO",0,FIFO,false,0); //!!SAMETRANSLATION
  MatCol(t,-125,"Eilutės FIFO",0,FIFORowVal,false,0);
  if (HasModNL) then begin
    Flip(flipnr); flipnr = flipnr + 1;
		MatCol(t=1,144,"Aprašymas",0,Spec,false,0);
		MatCol(t,-340,"Trumpas",0,ACShort,false,ACShortSClass);
		MatCol(t,-270,"Pard. sąsk.",0,SalesAcc,false,AccSClass);
		MatCol(t,-200,"Savik. sąsk.",0,CostAcc,false,AccSClass);
		if (HasObjects) then begin
			MatCol(t,-130,"Objektai",0,Objects,false,ObjSClass);
    end;
  end;
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Prekės būklė",'I','I',0,"ItemStatusWSDsm");
  EndRowMenu;
  EndMatrix;
  vs = 20;
  v = 18; 
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-35,v,-16,v+vs,ToolFlip,f,chr(asc("A") + f - 1)); //!!SAMETRANSLATION
      v = v + vs;
    end;
  end;
  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,CurncyCode); tilenr = tilenr + 1;
  vs = 20;
  EditField(h=110,v=6,50,"Valiuta",ViewOnly,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
      if (HasBase2) then begin
  EditField(h,v+vs,50,"Baz. val. 1",ViewOnly,BaseRate1,true,0);
      end else begin
        EditField(h,v+vs,50,"Baz. valiuta",ViewOnly,BaseRate1,true,0);
      end;
      if (HasBase2) then begin
  EditField(h,v+(vs*2),50,"Baz. val. 2",ViewOnly,BaseRate2,true,0);  
      end;  
  EditField(h2=295,v,50,"Kursas",ViewOnly,FrRate,true,0);
      if (HasBase2) then begin
  RateField(h3=360,v,50,":",ViewOnly,"ToRateB1",true,h3+60,v+14,"Baz. val. 1",false); //!!SAMETRANSLATION
  RateField(h3,v+=vs,50,":",ViewOnly,"ToRateB2",true,h3+60,v+14,"Baz. val. 2",false);    //!!SAMETRANSLATION
      end else begin
        RateField(h3=360,v,50,":",ViewOnly,"ToRateB1",true,h3+60,v+14,"Baz. val.",false); //!!SAMETRANSLATION
      end;
    end else begin
      EditField(h,v+=vs,50,"Baz. val. 1",ViewOnly,BaseRate1,true,0);
      EditField(h,v+=vs,50,"Baz. val. 2",ViewOnly,BaseRate2,true,0);
    end;
  end; 
  Tile(tilenr,130,false,tilenr,Phone); tilenr = tilenr + 1;
  vs = 20;h = 75;h2 = 300;
  EditField(h,vm=(v=6),150,"Tel. nr.",Normal,Phone,false,0);
  EditField(h,v+=vs,150,"Fakso nr.",Normal,Fax,false,0);
  if (IsEnterprise) then begin
    EditField(h,v+=vs,200,"Faktūra kam",Normal,InvoiceToCode,false,CUSClass);
  end;
  if (HasLanguages) then begin 
    EditField(h,v+=vs,80,"Kalba",Normal,LangCode,false,LangSClass);
  end;
  if (HasPriceLists) then begin
    EditField(h,v+=vs,80,"Kainoraštis",Normal,PriceList,false,PLDefSClass);
	end;
  if (HasVATZone) then begin
    v = VATZoneButtonsLabelslit(h2,v=vm+vs,170,16);
  end;
  Tile(tilenr,90,false,tilenr,Comment1); tilenr = tilenr + 1; 
  vs = 20;
  EditField(h=75,v=6,-20,"Komentaras",Normal,Comment1,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment3,false,0);
  EditField(h,v+=vs,-20,"",Normal,Comment4,false,0);
  EnterSkip(TransDate);
  if (HasModSVO) then begin
    SpecialMenu("Atidaryti darbo užsakymą",' ',0,"OpenWOFromWSDsm");
  end;
  if (HasIntegratedNL) then begin
  SpecialMenu("Atidaryti D/K operaciją",'t',1,"OpenTRFromWS");
	end;
  SpecialMenu("Prekės paieška",'f',3,"ItemSearchDsm");
  if (HasTaxMatrix) then begin
  	SpecialMenu("Atidaryti mokesčių matricą",' ',25,"OpenVatMatrixWSDsm");  
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModCRM) then begin
//    SpecialMenu("Activity",'c',4,"ActFromWSDsm");
  end;
  if (HasModPO) then begin
    SpecialMenu("Sukurti pirkimo užsakymą",' ',5,"POFromWSDsm");
  end;
  if (HasReturnedGoods) then begin
    SpecialMenu("Sukurti prekių grąžinimą",'B',6,"RetFromWSDsm"); 
  end;
//  SpecMenuItem("Darbo kortelės būklė",'r',4);
  EndWindow;
end;

window INDClass:8
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  integer tilenr;
  real h,h1,h2,h3,h4,h5,h6,v,vm,vs;
  string 255 label;
  record CYBlock CYb;
  LongInt bm,lt,rt,tp;
  
  BlockLoad(CYb);
  WindowBegin("Prekė",INDClass,CGview,-);
  SetWRect(20,80,830,400);
  Sizeable(-1,-1,-1,0);
  DynamicWindow;
  UseView(INVc);
  if (GuiType==kGuiAndroid) then begin
    ToolBar;
    PushButton(-110,5,-10,25,ToolImagePicker,"Paveiksliukas");
    EndToolBar;
  end;

  if (HasJewelleryInterface) then begin
    Tile(0,107,false,"",Code); 
  end else begin
  Tile(0,87,false,"",Code);
  end;
  v = 6; vs = 20; h = 155; h1 = 300; h2 = 385; h3 = 395; h4 = 285; h5 = 433;
  EditField(h,v, 150,"Nr.",Normal,Code,false,0);
  EditField(h2,v,80,"Grupė",Normal,Group,false,ITSClass);
  EditField(h,v+=vs,-40,"Aprašymas",Normal,Name,false,0);
  if (HasJewelleryInterface) then begin
    EditField(h,v+=vs,150,"Alternatyvus kodas",Normal,AlternativeCode,false,0); 
  end;
  tilenr = 1;
  TileButton(tilenr,"Kainos"); tilenr = tilenr + 1;
  if (HasJewelleryInterface) then begin
    TileButton(tilenr,"Juvelyrika"); tilenr = tilenr + 1; 
    TileButton(tilenr,"Laikrodis"); tilenr = tilenr + 1;  //!!Sd;
  end;
  TileButton(tilenr,"Atsargos"); tilenr = tilenr + 1;
  if (StandardHansa==false) then begin
  TileButton(tilenr,"Sandėlis"); tilenr = tilenr + 1;
  end;
  if (UserCanAction("ViewCostPrice",true)) then begin
  TileButton(tilenr,"Savikaina"); tilenr = tilenr + 1;
  end;
  TileButton(tilenr,"Gamyba"); tilenr = tilenr + 1;
  TileButton(tilenr,"Sąsk."); tilenr = tilenr + 1;
  if (GuiType==kGuiiPhone) then begin
    TileButton(tilenr,"Paveiksliukas"); tilenr = tilenr + 1; 
  end;
  TileButton(tilenr,"Įvairovės"); tilenr = tilenr + 1;
  TileButton(tilenr,"Tekstas"); tilenr = tilenr + 1;
  TileButton(tilenr,"Savik. sk."); tilenr = tilenr + 1;
  if (StandardHansa==false) then begin
  TileButton(tilenr,"Vart. laukai"); tilenr = tilenr + 1;
  end;
    TileButton(tilenr,"Žinutės"); tilenr = tilenr + 1;
  if (HasCharts) then begin
  TileButton(tilenr,"BI"); tilenr = tilenr + 1;  
  end;
  tilenr = 1;
  CheckBox(h,v+=vs,0,"Uždaryta",Terminated);
  CheckBox(h2,v,0,"Neparduodama",NotForSales);
  if (GuiType==kGuiiPhone) then begin
    GetScreenSize(CurWindow,tp,lt,bm,rt);
    Pict_Field(5,v+=20,rt-10,bm-10,""); 
  end;
  Tile(tilenr,209,false,tilenr,Unittext); tilenr = tilenr + 1;
  EditField(h,v=6 ,100,"Vienetas",Normal,Unittext,false,UnitSClass);
  if (HasJewelleryInterface) and (UserCanAction("ViewCostPrice",true)) then begin
    EditField(h,v+=vs,100,"Savikaina",Normal,InPrice,true,0);  
  end;
  EditField(h,v+=vs,100,"Kaina",Normal,UPrice1,true,0);
  EditField(h,v+=vs,100,"Kainos pasikeitimas",ViewOnly,LastBasePriceChange,true,0);
  EditField(h,v+=vs,100,"Kainos faktorius",Normal,PriceFactor,true,0);
  EditField(h,v+=vs,100, "Prekės formulė",Normal,CalcPrice,false,CPMSClass);
  EditField(h,v+=vs,100,"Antkainio %",Normal,Markup,true,0);
  EditField(h,v+=vs,100,"Premijos %",Normal,Bonus,true,0);
  EditField(h,v+=vs,-240,"Objektai",Normal,Objects,false,ObjSClass);
  if (HasItemClassification) then begin
  EditField(h,v+=vs,-240,"Klasės",Normal,DispGroups,false,DISClass);
  end;
  if (StandardHansa==false) then begin
  ButtonFrame(h1,v=24,120,4,"Prekės tipas");
  end else begin
    ButtonFrame(h1,v=24,120,3,"Prekės tipas"); 
  end;
  RadioButton(h1,v,kItemTypePlain,0,"Paprasta",ItemType);
  RadioButton(h1,v+=16,kItemTypeStocked,0,"Sandėliuojama",ItemType);
  RadioButton(h1,v+=16,kItemTypeStructured,0,"Struktūrinė",ItemType);
  if (StandardHansa==false) then begin
  RadioButton(h1,v+=16,kItemTypeService,0,"Paslauga",ItemType);
  end;
  EndFrame;
  
  Pict_Field(-205,8,-35,178,"");
  if (GuiType==kGuiCocoa) then begin
    PushButton(-160,182,-80,202,ToolImagePicker,"Pridėti pav.");  
  end;
  if (StandardHansa==false) then begin
  CheckBox(h1,v+=32,0,"Prekė - projekto medžiaga",ItemMaterial);
  end;
  if (HasJewelleryInterface) then begin
    Tile(tilenr,110,false,tilenr,Metal); tilenr = tilenr + 1;
    EditField(h,v=6, 140,"Metalas",Normal,Metal,false,0);  
    EditField(h,v+=vs, 140,"Svoris",Normal,RowWeight,false,0);  
    EditField(h,v+=vs, 140,"Dydis",Normal,Size,false,0);  
    EditField(h,v+=vs, 140,"Ilgis",Normal,Length,false,0);  
    EditField(h,v+=vs, 140,"Nuoroda",Normal,Reference,false,0);  
    v = 6; 
    EditField(h5,v, 140,"Pagr. akmens info",Normal,MajStoneDet,false,0);  
    EditField(h5,v+=vs, 140,"Spalva",Normal,Colour,false,0); 
    EditField(h5,v+=vs, 140,"Ryškumas",Normal,Clarity,false,0);  
    EditField(h5,v+=vs, 140,"Sertifikatas",Normal,Cert,false,0);  
    EditField(h5,v+=vs, 140,"Pap. akmens info",Normal,MinStoneDet,false,0);  
    Tile(tilenr,90,false,tilenr,WatchBrand); tilenr = tilenr + 1;
    EditField(h,v=6, 140,"Gamintojas",Normal,WatchBrand,false,0);  
    EditField(h,v+=vs, 140,"Stilius",Normal,StyleName,false,0);  
    EditField(h,v+=vs, 140,"Metalas",Normal,WatchMetal,false,0);  
    EditField(h,v+=vs, 140,"Judėjimas",Normal,Movement,false,0);  
    v = 6; 
    EditField(h5,v, 140,"Dirželis",Normal,BrcStr,false,0); 
    EditField(h5,v+=vs, 140,"Lytis",Normal,Gender,false,0);  
    EditField(h5,v+=vs, 140,"Kita",Normal,Other,false,0);  
    EditField(h5,v+=vs, 140,"Kita 2",Normal,Other2,false,0);  
  end;
  Tile(tilenr,170,false,tilenr,MinLevel);  tilenr = tilenr + 1; // Need to clean this Tile up!
  v = 6;
  vm = v;
  ButtonFrame(h1,v+=24,143,3,"Serijinio nr. kontrolė");
  RadioButton(h1,v,0,0,"Nėra",SerNrf);
  RadioButton(h1,v+=16,1,0,"Vnt.",SerNrf);
  RadioButton(h1,v+=16,2,0,"Siuntos",SerNrf);
    CheckBox(h1+200,v,0,"Nereikalauti siuntos nr. POS faktūrose",DonotRequireBatchNrOnIVCash);
  EditField(h,v=6,100,"Min. lygis",Normal,MinLevel,true,0);
  EditField(h,v+=vs,100,"Maks. lygis",Normal,MaxLevel,true,0);
  EditField(h,v+=vs  ,100,"Skyrius",Normal,Department,false,DepSClass);
  EditField(h,v+=vs  ,100,"Lentynos kodas",Normal,InvCode,false,0);
  EditField(h,v+=vs,100,"Šaltinis, nenur. kitaip",Normal,DefaultSource,false,SourceSClass);
  EditField(h5,v ,50,"Aplinkos aps. mokestis/kg.",Normal,RepaPricePerWeight,true,0);
  EditField(h6=650,v ,80,"Pagrindinis Užsk. tipas",Normal,DefOrderType,false,SetSClass);
  if (StandardHansa==false) then begin
  EditField(h,v+=vs ,100,"Rizikos lygis",Normal,HazLevCode,false,HazLevSClass);
  EditField(h5,v ,50,"Alkoholio %",Normal,AlcPrc,true,0);
    if (HasLocalization("PRT")) then begin
    EditField(h6,v, 80,"Atsargų prek. tipas",Normal,StockItemType,false,SetSClass);
    end;
  end;
  EditField(h,v+=vs ,100,"Vnt. 2",Normal,Unittext2,false,UnitSClass);
  EditField(h5,v ,50,"Konversija 1",Normal,Conversion1,true,0);
  EditField(h,v+=vs,100,"Vnt. koeficientas",Normal,UnitCoefficient,true,0);
  EditField(h5,v ,50,"Konversija 2",Normal,Conversion2,true,0);
  if (StandardHansa==true) then begin
    EditField(h,v+=vs ,50,"Prekės plotis",Normal,Width,true,0); 
    EditField(h4,v ,50,"Aukštis",Normal,Height,true,0); 
    EditField(h5,v ,50,"Gylis",Normal,Depth,true,0); 
    EditField(h,v+=vs ,50,"Prekės tūris",Normal,Volume,true,0); 
    EditField(h4,v ,50,"Tankumas",Normal,Density,true,0); 
    EditField(h5,v ,50,"Svoris",Normal,Weight,true,0); 
  end;
  if (StandardHansa==false) then begin
  Tile(tilenr,170,false,tilenr,LocArea);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6) ,100,"Pagrindinė paletės prekė",Normal,DefPalletItem,true,INSClass);
  EditField(h5,v ,80,"Pakrovimo sritis",Normal,PickArea,false,LocAreaSClass);
  EditField(h,v+=vs ,100,"Pagr. patalpos sritis",Normal,LocArea,false,LocAreaSClass);
  EditField(h5,v ,50,"Palečių pakrov. srityje",Normal,PalletsInPickArea,true,0);
  EditField(h,v+=vs ,50,"Maks. kiekis paletėje",Normal,QtyonPallet,true,0);
  EditField(h4,v ,50,"Paletės sl.",Normal,PalletLayers,true,0);
  EditField(h5,v ,50,"Kiekis sluoksnyje",Normal,QtyonPalletLayer,true,0);
  EditField(h,v+=vs ,50,"Pal. plotis",Normal,PalletWidth,true,0);
  EditField(h4,v ,50,"Pal. aukštis",Normal,PalletHeight,true,0);
  EditField(h5,v ,50,"Pal. gylis",Normal,PalletDepth,true,0);
  EditField(h,v+=vs ,50,"Viet. plotis",Normal,DefPosWidth,true,0);
  EditField(h4,v ,50,"Viet. aukštis",Normal,DefPosHeight,true,0);
  EditField(h5,v ,50,"Viet. gylis",Normal,DefPosDepth,true,0);
  EditField(h,v+=vs ,50,"Plotis",Normal,Width,true,0);
  EditField(h4,v ,50,"Aukštis",Normal,Height,true,0);
  EditField(h5,v ,50,"Gylis",Normal,Depth,true,0);
  EditField(h,v+=vs ,50,"Tūris",Normal,Volume,true,0);
  EditField(h4,v ,50,"Tankis",Normal,Density,true,0);
  EditField(h5,v ,50,"Neto svoris",Normal,NetWeight,true,0);
  EditField(h5,v+=vs ,50,"Svoris",Normal,Weight,true,0);
  end;
  if (UserCanAction("ViewCostPrice",true)) then begin
  Tile(tilenr,190,false,tilenr,InPrice);  tilenr = tilenr + 1;
  EditField(h,vm=(v=6),100,"Savikaina",Normal,InPrice,true,0);
  if (StandardHansa==false) then begin
  EditField(h5,v,70,"Savik. pasikeitimas",ViewOnly,LastPriceChange,true,0);
  end else begin
    EditField(h3,v,70,"Savik. pasikeitimas",ViewOnly,LastPriceChange,true,0); 
  end;
  if (StandardHansa==false) then begin
  EditField(h,v+=vs ,100,"Savik. bazine val. 2",Normal,InPriceB2,true,0);
  ButtonFrame(h1,v+=24,200,4,"Savik. atnaujinimas po gavimo");
  end else begin
    ButtonFrame(h1,v+=40,210,4,"Savik. atnaujinimas po gavimo"); 
  end;
  RadioButton(h1,v,0,0,"Nėra",UpdateCost);
  RadioButton(h1,v+=16,1,0,"Paskutinio pirkimo kaštai(su pap. kašt.)",UpdateCost);
  RadioButton(h1,v+=16,2,0,"Svertinis vidurkis",UpdateCost);
  RadioButton(h1,v+=16,3,0,"Paskutinio pirkimo kaštai(be pap. kašt.)",UpdateCost);
  ButtonFrame(h5=540,v=v-3*16,200,3,"Atnaujinti savik. Sand. perkainavimuose");
  RadioButton(h5,v,0,0,"Neatnaujinti",SRUpdateCost);
  RadioButton(h5,v+=16,1,0,"Paskutinio perkainavimo savik.",SRUpdateCost);
  RadioButton(h5,v+=16,2,0,"Svert. vidurkis",SRUpdateCost);
  if (StandardHansa==false) then begin
  EditField(h,v=vm+2*vs,100,"Papildomi kaštai",Normal,ExtraCost,true,0);
  end else begin
    EditField(h,v=vm+vs,100,"Papildomi kaštai",Normal,ExtraCost,true,0); 
  end;
  EditField(h,v+=vs ,100,"Svertinis vid.",Normal,WeighedAvPrice,true,0);
  if (StandardHansa==false) then begin
  EditField(h,v+=vs ,100,"Svertinis vid. bazine val. 2",Normal,WeighedAvPriceB2,true,0);
  end;
  EditField(h,v+=vs ,100,"Pask. pirkimo kaštai(su pap. kašt.)",Normal,LastPurchPrice,true,0);
  EditField(h,v+=vs ,100,"Pask. pirkimo kaina(be. pap. kašt.)",Normal,LastPurchPrice2,true,0);
  EditField(h,v+=vs ,100,"Pask. pirkimo val.",Normal,LastPurchCurncyCode,false,CurncyCodeSClass);
  EditField(h,v+=vs ,100,"Fiksuotas frachtas",Normal,FixedFreight,true,0);
  CheckBox(h1,v,0,"Įtraukti fiksuotą prekės frachtą",InclItemFreight);
  CheckBox(h5,v,0,"Turi akcizą",HasExcise);   
  end;
  Tile(tilenr,170,false,tilenr,Recepy);  tilenr = tilenr + 1;
  EditField(h,v=6 ,120,"Ruošinys",Normal,Recepy,false,RecSClass);
  CheckBox(h1,v,0,"Rodyti komponentus dokumentuose",ExplodeRec); // "Show components on documents" is better English but VERY confusing
  EditField(h,v+=vs ,120,"Faktūros ruošinys",Normal,InvRecepy,false,RecSClass);
  EditField(h2,v,150,"Brūkšn. kodas",Normal,BarCode,false,0);
  EditField(h,v+=vs ,120,"Kontrakto prekė",Normal,ContractItem,false,INSClass);
  EditField(h2,v,150,"Nomenklatūros kod.",Normal,EUCodex,false,CommoditySClass);
  v = v + vs;
  if (StandardHansa==false) then begin
    EditField(h,v,120,"Nuomos faktūravimas",Normal,RentalItem,false,INSClass); 
  end;
  EditField(h2,v,150,"ECN kodas",Normal,EKNCode,false,0); // i think it is same as Commodity Code
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,150,"Produktų ir paslaugų klasės",Normal,CPSCode,false,0);
  end;
  if (HasLocalization("LVA")) then begin
    EditField(h,v+=vs,55,"Fiskalinis Departamentas",Normal,FiscalDep,false,0); 
  end;
  EditField(h,v+=vs ,120,"Garantija mėn.",Normal,WarrantyLength,true,0);
  EditField(h2,v,150,"Spalva",Normal,colnr,false,SetSClass);
  EditField(h,v+=vs,120,"Rūšiav, kodas",Normal,SortCode,true,0);
  EditField(h,v+=vs,-40,"Alt. kodas",Normal,AlternativeCode,false,0);
  EditField(h,v+=vs,-40,"Perspėjimas",Normal,WarnText1,false,0);
  Tile(tilenr,170,false,tilenr,SalesAcc);  tilenr = tilenr + 1;
  v = 6;
  vm = v;
  EditField(h,vm,55,"Vietinė pard. sąsk.",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,VATZoneNameLIT & "Pardavimų sąsk.",Normal,EUSalesAcc,false,AccSClass);
  EditField(h,v+=vs,55,"Ne ES pard. sąsk.",Normal,ExpSalesAcc,false,AccSClass);
  if (StandardHansa==false) then begin
  EditField(h,v+=vs,55,"Pasl. fakt. pard sąsk.",Normal,SVOInvbleSalesAcc,false,AccSClass); 
//     EditField(h,v+=vs,55,"Serv. Warranty Sales A/C",Normal,SVOWarrantySalesAcc,false,AccSClass);
//     EditField(h,v+=vs,55,"Serv. Contract Sales A/C",Normal,SVOContractSalesAcc,false,AccSClass);
//     EditField(h,v+=vs,55,"Serv. Goodwill Sales A/C",Normal,SVOGoodwillSalesAcc,false,AccSClass);
  end;
  EditField(h,v+=vs,55,"Komponentų panaudojimas",Normal,CompUsage,false,AccSClass);
  EditField(h,v+=vs,55,"Proj. medžiagų pan. sąsk.",Normal,ProjMaterialsUsageAcc,false,AccSClass); 

  EditField(h2=360,v=vm,55,"Viet. savik. sąsk.",Normal,CostAcc,false,AccSClass);
 EditField(h2,v+=vs,55,VATZoneNameLIT & "Savikainos sąsk.",Normal,EUCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"Ne ES savik. sąsk.",Normal,ExpCostAcc,false,AccSClass);
  if (StandardHansa==false) then begin
  EditField(h2,v+=vs,55,"Pasl. fakt. savik. sąsk.",Normal,SVOInvbleCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"Pasl. garant. savik. sąsk.",Normal,SVOWarrantyCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"Pasl. sut. savik. sąsk.",Normal,SVOContractCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"Pasl. Goodwill savik. sąsk.",Normal,SVOGoodwillCostAcc,false,AccSClass);
  EditField(h2,v+=vs,55,"Viešb. WIP sąsk.",Normal,HotelWIPAcc,false,AccSClass); 
  end;
  EditField(h2=540,v=vm,20,"Viet. PVM kd.",Normal,VATCode,false,VATCodeSClass);
  EditField(h2,v+=vs,20,VATZoneEditFieldLabel_LIT(1) & "PVM kd.",Normal,VATCodeEU,false,VATCodeSClass);
  EditField(h2,v+=vs,20,"Ne ES PVM kd.",Normal,VATCodeExp,false,VATCodeSClass);
  if (HasExtTax) then begin
  CheckBox(h2,v+=20,0,"Skaičiuoti percepc.mokesčius",Perceptions);
  end;
  if (StandardHansa==false) then begin
    if (HasWithholdingTax) then begin
   CheckBox(h2,v+=16,0,"Skaičiuoti sulaikymo mokesčius",Withholdings);
    end;
    if (CYb.UseTaxTemplatesforTaxCalc!=0) then begin
  EditField(h2=670,v=vm,50,"Viet. mok. šabl.",Normal,TaxTemplateCode,false,TaxTemplateSClass);
      EditField(h2,v+=vs,50,VATZoneEditFieldLabel_LIT(1) & "Mok. šabl.",Normal,TaxTemplateCodeEU,false,TaxTemplateSClass);
  EditField(h2,v+=vs,50,"Eksp. mok. šabl.",Normal,TaxTemplateCodeExp,false,TaxTemplateSClass);
    end;
    v = vm; h2=680;
    if (HasLocalization("GBR,LTU,POL,LVA")) then begin
      EditField(h2,v,20,"Reversinis PVM kodas",Normal,RvrsVATCode,false,VATCodeSClass); v = v + vs;
    end;
    if (HasLocalization("SWE")) then begin
      EditField(h2,v,20,"Cheminis mokesčių kodas",Normal,ChemicalTaxCode,false,ChemicalTaxCodeSClass); v = v + vs;
    end;
  end;
  if (GuiType==kGuiiPhone or GuiType==kGuiAndroid) then begin
    Tile(tilenr,70,false,tilenr,-);  tilenr = tilenr + 1;
    AttachmentDisplay(10,10,200,200);
//    PushButton(30,10,-80,40,ToolImagePicker,"Take picture");
//    ControlLabel(0,0,0,0,"Take picture","SystemFont",17,kTextStyleBold,AdjCenter,patM4ReportsTextBlue);
  end;
  Tile(tilenr,70,false,tilenr,VARMask);  tilenr = tilenr + 1;
  EditField(h,v=6,-40,"Įvairovių šablonas",Normal,VARMask,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Ataskaitos eilė",Normal,VARRepOrder,false,VARMasksSClass);
  EditField(h,v+=vs,-40,"Poaibiai",Normal,VARSubsets,false,VARSubsetsSClass);
  Tile(tilenr,120,true,tilenr,Math);  tilenr = tilenr + 1;
  v = 24;
  MatrixBegin(4,v,-32,-40,-,99);
  MatCol(1,24,"Kalba",0,LangCode,false,LangSClass);
  MatCol(1,94,"Tekstas",0,Text,false,0);
  EndMatrix;
  Tile(tilenr,220,false,tilenr,CostPerc);  tilenr = tilenr + 1;
  ButtonFrame(h=100,vm=(v=20),230,6,"Pirminis savikainos modelis");
  RadioButton(h,v,0,0,"Pagal nutylėjimą",PrimaryCostModel);
  RadioButton(h,v+=16,1,0,"Įsigijimo kaina",PrimaryCostModel);
  RadioButton(h,v+=16,2,0,"% _nuo bazinės kainos",PrimaryCostModel);
  EditField(h+150,v,55,"%",Normal,CostPerc,true,0);
  RadioButton(h,v+=16,3,0,"Svertinis vidurkis",PrimaryCostModel);
  RadioButton(h,v+=16,4,0,"Eilė",PrimaryCostModel);
  RadioButton(h,v+=16,kCostModelNoneItem,0,"Jokio",PrimaryCostModel);
  ButtonFrame(h,v+=40,230,3,"Eilės savikainos modelis");
  RadioButton(h,v,0,0,"Pagal nutylėjimą",QueuedCostModel);
  RadioButton(h,v+=16,1,0,"F_IFO",QueuedCostModel);
  RadioButton(h,v+=16,2,0,"LIFO",QueuedCostModel);

  ButtonFrame(h2=380,v=vm,200,3,"Savikaina serijiniams nr.");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",FIFOPerSerialNr);
  RadioButton(h2,v+=16,1,0,"Savikaina ne serijiniams nr.",FIFOPerSerialNr);
  RadioButton(h2,v+=16,2,0,"Savikaina serijiniams nr.",FIFOPerSerialNr);
  ButtonFrame(h2,v+=40,200,3,"Eilės modelis pagal patalpą");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",FIFOPerLocation);
  RadioButton(h2,v+=16,1,0,"Eilė ne pagal patalpą",FIFOPerLocation);
  RadioButton(h2,v+=16,2,0,"Eilė pagal patalpą",FIFOPerLocation);
  ButtonFrame(h2,v+=40,200,3,"Svertinis vid. pagal patalpą");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",WAPerLocation);
  RadioButton(h2,v+=16,1,0,"Svert. vid. ne pagal patalpą",WAPerLocation);
  RadioButton(h2,v+=16,2,0,"Svert. vid. pagal patalpą",WAPerLocation);
/*5.3
  ButtonFrame(h2,v+=40,200,3,"Savikaina patalpai");
  RadioButton(h2,v,0,0,"Pagal nutylėjimą",CostPricePerLocation);
  RadioButton(h2,v+=16,1,0,"Savikaina ne pagal patalpą",CostPricePerLocation);
  RadioButton(h2,v+=16,2,0,"Savikaina patalpai",CostPricePerLocation);
*/
  if (StandardHansa==false) then begin
    Tile(tilenr,240,false,tilenr,-); tilenr = tilenr + 1;
  h = 180; v = 6;
  label = UserDefined("INVc","UserStr1");
  if (nonblank(label)) then begin
    EditField(h,v=6 ,-40,label,Normal,UserStr1,false,0);
  end;
  label = UserDefined("INVc","UserStr2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr2,false,0);
  end;
  label = UserDefined("INVc","UserStr3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr3,false,0);
  end;
  label = UserDefined("INVc","UserStr4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr4,false,0);
  end;
  label = UserDefined("INVc","UserStr5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-40,label,Normal,UserStr5,false,0);
  end;
  label = UserDefined("INVc","UserVal1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal1,true,0);
  end;
  label = UserDefined("INVc","UserVal2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal2,true,0);
  end;
  label = UserDefined("INVc","UserVal3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,50,label,Normal,UserVal3,true,0);
  end;
  label = UserDefined("INVc","UserDate1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate1,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate2,true,PasteCurDate);
  end;
  label = UserDefined("INVc","UserDate3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,80,label,Normal,UserDate3,true,PasteCurDate);
  end;
  end;
  Tile(tilenr,400,false,tilenr,Math2); tilenr = tilenr + 1;
  StaticText(50,v=20,"Žinutė",true);
  TextField(60,v-5,-20,370,Math2,0);
  if (HasCharts) then begin
    Tile(tilenr,400,false,tilenr,-); tilenr = tilenr + 1;
    ChartArea(10,6,-10,390,"$INDCLass_BIChart");
  end;
  if (UserCanReport("INInfoRn","",true)) then begin 
  SpecialMenu("Prekės būklės ataskaita",'I',0,"INStatusINDsm");
  end;
//  SpecMenuItem("Perskaičiuoti kainoraštį",' ',2);
  if (UserCanReport("INrsRn","INrsRClass",true)) then begin 
    SpecialMenu("Prekės istorija",'h',3,"INrsRn_INSm");//CMD H DOES HIDE HANSA
  end;
  SpecialMenu("Prekės patalpoje būklė",' ',4,"LocItemStatDsm");
  if (HasJewelleryInterface) and (UserCanReport("INInfoRn","",true)) then begin 
    SpecialMenu("Prekės būklė per alt. kodą",'S',5,"ItemStatusAltINDsm"); 
  end;  
  SpecialMenu("Open Extended description",' ',6,"BPIINTextFromINDsm");// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 06 12 2018 y. at 11:42:11 AM
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  SpecialMenu("Sukurti perkamą prekę",' ',1,"PIFromINDsm");
  SpecialMenu("Sukurti ruošinį",' ',2,"RecFromINDsm");

  EndWindow;
end;

window CashierDefTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,v,vm,vm2,vs,chkbx;
  
  WindowBegin("POS Nustatymai",CashierDefTClass,CGSbl,-);
  SetWRect(64,80,700,600);
  SetBlid(CashierDefBlock);
  v = 6; vs = 20; h = 150; h2 = 290; vm=0;
  EditField(h,v,70,"Pagr. pirkėjas",Normal,DefCustCode,false,CUSClass); 
  if (HasModNL) then begin
  EditField(h,v+=vs,70,"Back office sąsk.",Normal,CredAcc,false,AccSClass); 
  EditField(h,v+=vs,70,"Nurašymo sąsk.",Normal,WriteOffAcc,false,AccSClass); 
  end;
  if (HasModRest) then begin
  EditField(h,v+=vs,70,"Arbatp. mok. būdas",Normal,TipPMCode,false,PMSClass);   
  end;
  if (IsEnterprise) then begin
    EditField(h,v+=vs,70,"Spausdintuvas",Normal,Printer,false,SetSClass);   
    if (StandardHansa==false) then begin
    EditField(h,v+=vs,70,"Pensininkų nuol. prekė",Normal,DiscountItem,false,INSClass);   
    end;
  end;
  if (HasModIN) then begin
    if (IsEnterprise) then begin
      chkbx = 2;
      if (HasLocalization("LVA")) then begin
        chkbx = 4;
      end;
      ButtonFrame(h-130,v+=3*vs+chkbx*16,490,2,"Automatinis sandėlio atnaujinimas POS modulyje");
      end else begin
        v = v + 40;
      if (HasLocalization("LVA")) then begin
        v = v+3*16;
      end;
      if (HasModRest) then begin
        ButtonFrame(h-130,v,490,2,"Automatinis sandėlio atnaujinimas POS modulyje");
      end else begin
        v = v;
      end;
    end;
      EditField(h,v,70,"Atnaujinimo intervalas",Normal,UpdStockMaintTime,false,PasteCurTime); 
//    ButtonFrame(h2,v,170,3,"Run Update #Stock# Maintenance");
//    RadioButton(h2,v,0,0,"Manually",UpdStockMaint);
//    RadioButton(h2,v+=16,1,0,"Periodically",UpdStockMaint);
//    RadioButton(h2,v+=16,2,0,"When OKing POS Invoice",UpdStockMaint);

    CheckBox(h2,v,0,"Vykdyti sandėlio atnaujinimą",UpdStockMaint); 
    CheckBox(h2,v+=18,0,"Kurti patvirtintus sandėlio nurašymus",POSOKSD);
  end;
  if (HasModIN) then begin
    ButtonFrame(h-130,v+=40,490,2,"Automatinis sandėlio atnaujinimas Restorano modulyje");
    EditField(h,v,70,"Atnaujinimo intervalas",Normal,RestUpdStockMaintTime,false,PasteCurTime);
    CheckBox(h2,v,0,"Vykdyti sandėlio atnaujinimą",RestUpdStockMaint);
    CheckBox(h2,v+=18,0,"Kurti patvirtintus sandėlio nurašymus",RestOKSD);
//    CheckBox(h2,v,0,"OK #Goods Receipts#",OKPU);
  end;
  if (IsEnterprise) then begin
    ButtonFrame(h-130,v+=40,490,2,"Automatinis kasos sesijų uždarymas"); 
    EditField(h,v,70,"Atnaujinimo intervalas",Normal,CashupMaintInterval,false,PasteCurTime); 
    CheckBox(h2,v,0,"Vykdyti kasos sesijų uždarymą",CashupMaint); 
    CheckBox(h2,v+=18,0,"Atidaryta kasos sesija - privaloma",RequireOpenSession);
  end;
//  EditField(h,v+=vs,60,"POS nr.",Normal,POSNr,false,0); 
  ButtonFrame(h-130,vm2=(v+=37+vs),220,3,"Prekės paveiksliukas kasininko ekrane");
  RadioButton(h,v,kPOSItemPictureDefault,0,"Numatytasis",ItemPictureCashier);
  RadioButton(h,v+=16,kPOSItemPictureOn,0,"Įjungtas",ItemPictureCashier);
  RadioButton(h,v+=16,kPOSItemPictureOff,0,"Išjungtas",ItemPictureCashier);
  if (BuildProductCode=="PAYYAPERP") then begin
    CheckBox(h2,vm2,0,"Atidaryta kasos sesija - privaloma",RequireOpenSession); 
  end;
  ButtonFrame(h-130,v+=40,220,3,"Prekės paveiksliukas kliento ekrane");
  RadioButton(h,v,kPOSItemPictureDefault,0,"Numatytasis",ItemPictureCustomer);
  RadioButton(h,v+=16,kPOSItemPictureOn,0,"Įjungtas",ItemPictureCustomer);
  RadioButton(h,v+=16,kPOSItemPictureOff,0,"Išjungtas",ItemPictureCustomer);
  v = vm + 3;
  if (HasModRest) then begin
    CheckBox(h2,v,0,"Įtraukti arbatpinigius į kasos ataskaitą",InclTipInCashup);
    v = v + 16;
  end;
  if (IsEnterprise) then begin
  if (HasModSL) then begin
//      CheckBox(h2,v,0,"Include Open Invoice value in Cash Up",InclOpenInvCashup);
//      v = v + 16;
  end;
  end;
  if (HasLocalization("LVA")) then begin
    CheckBox(h2,v,0,"Neleisti nulinių kiekių",NoZeroQty);v = v + 16; 
    CheckBox(h2,v,0,"Tikrinti PVM reg. nr. įterpiant prekę su atvirkštiniu PVM",CheckVATNo);v = v + 16; 
  end;
  if (IsEnterprise) then begin
    if (StandardHansa==false) then begin
    CheckBox(h2,v,0,"Registruoti pardavimus fiskaliniame įrenginyje",CashSalesToFiscalControlUnit); 
      v = v + 16;
    end;
    CheckBox(h2,v,0,"Leisti kelias sesijas tame pačiame įrenginyje",MultipleSessionsPerLocalMachine); 
    CheckBox(h2,v+=16,0,"Neleisti keisty patvirtintų POS faktūroms Live Sync klientams",NoChangesPOSOnLiveSyncClient); 
  CheckBox(h2,v+=16,0,"Reikalauti grąžinimo priežasties",RequireReturnReason); 
  CheckBox(h2,v+=16,0,"Reikalauti pirkėjo grąžinimui",RequireReturnCustomer); 
    if (HasLocalization("LVA")) then begin
      CheckBox(h2,v+=16,0,"Neleisti nulinių kiekių",NoZeroQty); 
  end;
  CheckBox(h2,v+=16,0,"Pardavimai ne fiskaliniam pirkėjui",AlwaysFiscal);// Edit ************************** BPI Ukraine - KramarAlexandr - 04, 03 01 2019 y. at 11:15:35 AM
  end;

  if (HasModNL) then begin
  ButtonFrame(h2,v+=45,220,2,"Kasos ataskaita per operacijų meniu"); 
  CheckBox(h2,v,0,"Pradėti nuo ankstesnio POS balanso",StartFromLastPOSBal); 
  if (HasModNL) then begin
  CheckBox(h2,v+=16,0,"Spausdinti detalią DK operaciją",PrintDetNLTrans); 
  end;
    EndFrame;
  end;
  if (IsEnterprise) then begin
    ButtonFrame(h2,v=vm2,170,3,"Numatytasis laukas naujoje faktūroje"); 
  RadioButton(h2,v,0,0,"Numatytasis",DefInvoiceField); 
  RadioButton(h2,v+=16,1,0,"Prekė",DefInvoiceField);
    if (HasSerialNumbers) then begin
  RadioButton(h2,v+=16,2,0,"Serijinis nr.",DefInvoiceField);
    end;
    EndFrame;
  end;
  EndWindow;
end;


window ORDClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,t,v,vm,vs,h5,flipnr,width;
  string 255 label;
  Integer rn;
  
  WindowBegin("Užsakymas",ORDClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(ORVc);
  ActiveFieldOnNew("CustCode");
  CommunicateButton;
  Tile(0,74,false,"",CustCode);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Pirkėjas",Normal,CustCode,false,CUSClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Pavadinimas",Normal,Addr0,false,0);
  if (StandardHansa==false) then begin
  EditField(h,vm=(v+=20),135,"Oficialus Nr.",Normal,OfficialSerNr,false,LegalInvNrSClass);
  CheckBox(h4=-100,v,0,"OK",OKFlag); //!!SAMETRANSLATION
  end else begin
    CheckBox(h4=-100,vm=(v+=20),0,"OK",OKFlag);  //!!SAMETRANSLATION
  end;
  EditField(530,vm,70,"Apmokamas %",Normal,PPVal,false,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 16 01 2019 y. at 11:08:12 AM
//  CheckBox(h+120,vm,0,"Uždarytas",Closed);
//  CheckBox(h+240,vm,0,"Reserved",Reserved);
  TileButton(1,"Terminai");
  TileButton(2,"Prekės");
  TileButton(3,"Valiuta");
  TileButton(4,"Siunt. terminai");
  TileButton(5,"Kainodara");
  TileButton(6,"Fakt. adr.");
  TileButton(7,"Siunt. adr.");
  Tile(1,110,false,"1",OrdDate);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,vm=(v=6),82,"Data",Normal,OrdDate,false,PasteCurDate);
  EditField(h1,v+=vs,35,"Mok. terminas",Normal,PayDeal,false,PDSClass);
  EditField(h1,v+=vs,82,"Plan. siuntimas",Normal,PlanShip,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Siuntimo data",Normal,DespatchDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Siuntimo laikas",Normal,DespatchTime,false,PasteCurTime);
  EditField(h2,v=vm,135,"Mūsų nuor.",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Kont. asmuo",Normal,CustContact,false,ContactSClass);
  EditField(h2,v+=vs,135,"Objektai",Normal,Objects,false,ObjSClass);
  EditField(h2,v+=vs,135,"Nuoroda",Normal,RefStr,false,0);
  EditField(h2,v+=vs,135,"Pirk. užs. Nr.",Normal,CustOrdNr,false,0);
  EditField(h3,v=vm,80,"Pardavėjas",Normal,SalesMan,false,UserSClass);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Projektas",Normal,PRCode,false,PRSClass);
  end;
  EditField(h3,v+=vs,80,"Užsak. klasė",Normal,OrderClass,false,OrderClassSClass);
  if (StandardHansa==false) then begin
  EditField(h3,v+=vs,80,"Užsak. tipas",Normal,OrderType,false,SetSClass);
    EditField(h3,v+=vs,80,"Pard. sutartis",Normal,ORCONr,false,ORCOSClass);
  end;
  CheckBox(h4,v=6,0,"Uždarytas",Closed);
  CheckBox(h4,v+=16,0,"Rezervuotas",Reserved);
  EnterSkip(Math);
  Tile(2,220,true,"2",Math);
//  CheckBox(20,-20,0,"OK",OKFlag);
  EditField(55,-41,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
  if (UseTaxTemplatesforTaxCalc==false) then begin
  if (UserCanAction("ViewCostPrice",true)) then begin
    EditField(160,-41,70,"BP %",Normal,GPProc,true,0);
    EditField(160,-21,70,"Viso BP",ViewOnly,TotGP,true,0);
  end;
    if (HasLocalization("GBR,LTU,POL,LVA")) then begin
      EditField(310,-41,50,"Reversinis PVM",ViewOnly,RvrsVAT,true,0);
      EditField(290,-21,70,"Ext. mokest.",ViewOnly,TAX1Sum,true,0); 
    end else begin
  EditField(290,-41,70,"Mok. 2",ViewOnly,TAX2Sum,true,0);
  EditField(290,-21,70,"Pap. Mok.",ViewOnly,TAX1Sum,true,0);
    end;
  EditField(410,-41,100,"PVM",ViewOnly ,Sum3,true,0);
  end else begin
    if (UserCanAction("ViewCostPrice",true)) then begin
      EditField(290,-41,70,"BP %",Normal,GPProc,true,0); 
      EditField(290,-21,70,"Viso BP",ViewOnly,TotGP,true,0); 
    end;
    EditField(410,-41,100,"Mok.",ViewOnly ,Sum3,true,0);
  end;
  EditField(410,-21,100,"Suma",ViewOnly,BaseSum4,true,0);
  EditField(-150,-41,100,"Tarp. suma",ViewOnly ,Sum1,true,0);
  EditField(-150,-21,100,"VISO",ViewOnly ,Sum4,true,0);
  v = 24;
  MatrixBegin(3,v,-50,-49,-,200);
  MatTypedRow(stp);
  flipnr = 0;
  Flip(flipnr); flipnr = flipnr + 1;
  MatText(t=9,32,"Tarp. suma",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatColTL(t,-80,"Suma",0,-1,ViewOnly,0,Sum,true,0);
  MatText(t=17,32,"Antraštė",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatCol(t=1,32,"Prekė",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
//  MatCol(t,144,"Kiekis",0,Quant,true,0);
  t = 1;
  if (HasVarieties) then begin
  MatCol(t,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Kiekis",0,Quant,true,0); 
  end;
    EnterSkip(ArtCode);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Prekė",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Var",0,VARList,true,VARSClass);
//  MatCol(t,144,"Kiekis",0,Quant,true,0);
  if (HasVarieties) then begin
  MatCol(t,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Kiekis",0,Quant,true,0); 
  end;
  EnterSkip(ArtCode);
  MatText(t=10,32,"Spausdinant, ši ir toliau einančios eilutės bus paslėptos",false);
  MatText(t=kInvoiceRowTypePerceptionTax,32,"Percepcijos mok.",true);
  MatCol(t,132,"",0,Region,false,0);
  MatCol(t,252,"",0,TAX2Prc,true,0);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,372,"",0,SalesAcc,false,0);
  MatCol(t,452,"",0,Spec,false,0);
  Flip(flipnr); flipnr = flipnr + 1;
//  MatCol(t=1,194,"Aprašymas",0,Spec,false,0);
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  MatCol(t,-235,"Vieneto kaina",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-284,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass); 
    MatCol(t,-224,"Sąskaita",0,SalesAcc,false,AccSClass); 
    MatCol(t,-164,"Objektas",0,Objects,false,ObjSClass);
    MatCol(t,-70,"M. kd.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-264,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass); 
    MatCol(t,-184,"Sąsk.",0,SalesAcc,false,AccSClass); 
    MatCol(t,-124,"Objektas",0,Objects,false,ObjSClass);
    if ((HasLocalization("GBR,LTU,POL") and IsEnterprise) or HasLocalization("LVA")) then begin
      MatCol(t,-60,"PVM-K",0,VATCode,false,VATCodeSClass); 
      MatCol(t,-30,"Revers",0,RvrsVATCode,false,VATCodeSClass); 
    end else begin
    MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
    end;
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  if (UseTaxTemplatesforTaxCalc) then begin
    MatCol(t,-284,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass); 
    MatCol(t,-224,"Sąskaita",0,SalesAcc,false,AccSClass); 
    MatCol(t,-164,"Objektas",0,Objects,false,ObjSClass);
    MatCol(t,-70,"M. kd.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
    MatCol(t,-264,"Pirk. prekės Nr.",0,CustArtCode,false,CUINSClass); 
    MatCol(t,-184,"Sąsk.",0,SalesAcc,false,AccSClass); 
    MatCol(t,-124,"Objektas",0,Objects,false,ObjSClass);
    if ((HasLocalization("GBR,LTU,POL") and IsEnterprise) or HasLocalization("LVA")) then begin
      MatCol(t,-60,"PVM-K",0,VATCode,false,VATCodeSClass); 
      MatCol(t,-30,"Revers",0,RvrsVATCode,false,VATCodeSClass); 
    end else begin
    MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
    end;
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  MatCol(t,344,"Užsakymo tipas",0,OrderType,false,SetSClass); 
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-245,"Vnt. kaina",0,Price,true,0);
    MatCol(t,-175,"%",0,vRebate,true,0);
    MatCol(t,-140,"Savikaina",0,BasePrice,true,0);
    MatCol(t,-70,"BP",0,rowGP,true,0);
  end else begin
    MatCol(t,-235,"Vieneto kaina",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Suma",0,Sum,true,0);
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
    if (UserCanAction("ViewCostPrice",true)) then begin
     MatCol(t,-245,"Vnt. kaina",0,Price,true,0);
     MatCol(t,-175,"%",0,vRebate,true,0);
     MatCol(t,-140,"Savikaina",0,BasePrice,true,0);
     MatCol(t,-70,"BP",0,rowGP,true,0);
   end else begin
    MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Suma",0,Sum,true,0);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Apraš.",0,Spec,false,0); 
  MatCol(t,-300,"Pardavėjas",0,Salesmen,false,UserSClass); 
  MatCol(t,-236,"Siunt. 1",0,Shipd1,true,0); 
  MatCol(t,-184,"Siunt. 2",0,Shipd2,true,0); 
  MatCol(t,-132,"Faktūruota",0,Invd,true,0); 
  MatCol(t,-80,"Ruošinys",0,Recepy,false,RecSClass);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Apraš.",0,Spec,false,0);
  MatCol(t,-290,"Siunt. 1",0,Shipd1,true,0);
  MatCol(t,-220,"Siunt. 2",0,Shipd2,true,0);
  MatCol(t,-150,"Faktūruota",0,Invd,true,0);
  MatCol(t,-80,"Ruošinys",0,Recepy,false,RecSClass);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  MatCol(t,-290,"Serijinis nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-150,"Plan. siunt.",0,PlanShipRow,true,PasteCurDate);
  MatCol(t,-70,"Kainos faktorius",0,PriceFactor,true,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-290,"Serijinis nr.",0,SerialNr,false,SerialNrSClass);
  MatCol(t,-150,"Plan. siunt.",0,PlanShipRow,true,PasteCurDate);
  MatCol(t,-70,"Kainos faktorius",0,PriceFactor,true,0);
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  MatCol(t,-315,"Siuntimo pažyma",0,ShipNote,false,0);
  MatCol(t,-210,"Patalpa",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-145,"Pozicija",0,Position,true,UsedPosSClass);
  end;
  MatCol(t,-90,"Šaltinis",0,Source,true,SourceSClass);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-315,"Siuntimo žinutė",0,ShipNote,false,0);
  MatCol(t,-210,"Patalpa",0,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  MatCol(t,-145,"Pozicija",0,Position,true,UsedPosSClass);
  end;
  MatCol(t,-90,"Šaltinis",0,Source,true,SourceSClass);
  if (StandardHansa==false) then begin
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(t=1,144,"Surink. data",0,PickingDate,false,PasteCurDate);
  MatCol(t,-390,"Surink. laik.",0,PickingTime,false,PasteCurTime);
  MatCol(t,-320,"Pakr. data",0,InloadingDate,true,PasteCurDate);
  MatCol(t,-230,"Pakr. laikas",0,InloadingTime,true,PasteCurTime);
  MatCol(t,-160,"Iškr. data",0,DespatchRowDate,true,PasteCurDate);
  MatCol(t,-70,"Iškr. laikas",0,DespatchRowTime,true,PasteCurTime);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Atsi. data",0,PickingDate,false,PasteCurDate);
  MatCol(t,-390,"Atsi. laikas",0,PickingTime,false,PasteCurTime);
  MatCol(t,-320,"Pakr. data",0,InloadingDate,true,PasteCurDate);
  MatCol(t,-230,"Pakr. laikas",0,InloadingTime,true,PasteCurTime);
  MatCol(t,-160,"Siunt. data",0,DespatchRowDate,true,PasteCurDate);
  MatCol(t,-70,"Siunt. laikas",0,DespatchRowTime,true,PasteCurTime);
  end;
  Flip(flipnr); flipnr = flipnr + 1;
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  MatCol(t,-315,"Vnt.",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Kiekis",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plotis",0,UnitXval,true,0);
  MatCol(t,-160,"Aukštis",0,UnitYval,true,0);
  MatCol(t,-120,"Gylis",0,UnitZval,true,0);
  MatCol(t,-80,"Vnt. egz. kaina",0,UnitFactPrice,true,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-315,"Vienetas",0,UnitCode,false,UnitSClass);
  MatCol(t,-260,"Vieneto kiekis",0,UnitFactQuant,true,0);
  MatCol(t,-200,"Plotis",0,UnitXval,true,0);
  MatCol(t,-160,"Aukštis",0,UnitYval,true,0);
  MatCol(t,-120,"Gylis",0,UnitZval,true,0);
  MatCol(t,-80,"Vieneto kaina",0,UnitFactPrice,true,0);
  InsertRowTest;
  DeleteRowTest;
  RowMenuBegin("");
  RowMenuItem(0,"Prekės paieška",'I','I',0,"ItemStatusORDsm");
  if (StandardHansa==false) then begin
    RowMenuItem(0,"Ankstesnė pardavimo kaina",' ',' ',0,"ORLastSPrsm");
  end;
  RowMenuItem(0,"Pridėti antraštės eilutę",' ',' ',0,"ORAddHeaderLine");
  RowMenuItem(0,"Pridėti paslėptą liniją",' ',' ',0,"ORAddHidLine");
  RowMenuItem(0,"Pridėti tarpinę sumą",' ',' ',0,"SubtotalORDsm");
  if (StandardHansa==false) then begin
    RowMenuItem(0,"Vadovo nuolaidos keitimas",' ',' ',0,"MgrsDiscOverrideORDsm"); 
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
  v = 18; VTab(-35,v,-16,v+vs,ToolFlip,1,"A");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,2,"B");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,3,"C");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,4,"D");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,5,"E");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,6,"F");
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,7,"G");
  if (StandardHansa==false) then begin
  v=v+vs;  VTab(-35,v,-16,v+vs,ToolFlip,8,"H");
  end;
  Tile(3,70,false,"3",FrRate);
  vs = 20;
  EditField(h=110,v=6,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
  EditField(h,v+vs,50,"Baz. val. 1",Normal,BaseRate1,true,0); 
  EditField(h,v+(vs*2),50,"Baz. val. 2",Normal,BaseRate2,true,0);   
  EditField(h2=295,v,50,"Kursas",Normal,FrRate,true,0); 
  RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val. 1",false);  //!!SAMETRANSLATION
  RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Baz. val. 2",false);     //!!SAMETRANSLATION
  Tile(4,110,false,"4",ShipDeal);
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Siuntimo term.",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h1,v+=vs,80,"Sintimo būdas",Normal,ShipMode,false,DMSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Maršrutas",Normal,Sorting,false,DelRouteSClass);
  end;
  EditField(h1,v+=vs,80,"Patalpa",Normal,Location,false,LocationSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Filialas",Normal,BranchID,false,AllCUSClass);
  end;
  EditField(h2,v=vm,80,"Viso kiekis",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Viso svoris",ViewOnly,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Viso tūris",ViewOnly,TotVolume,true,0);
  EditField(h2,v+=vs,80,"Frachtas",Normal,FrPrice,true,0);
  EditField(h2,v+=vs,80,"Intrastat kodas",Normal,IntrastatTransCode,true,IntrastatTransCodeSClass);
  if (StandardHansa==false) then begin
    EditField(h3,v,80,"Frahto PVM kd.",Normal,FrVATCode,true,VATCodeSClass);
  end;
  CheckBox(473,v=vm,0,"Faktūros prieš siuntimą",InvBeforeShip);
  CheckBox(473,v+=16,0,"Nustat. prist. kiekį į 0",SHShipSetToZero); 
  Tile(5,130,false,"5",PriceList);
    h3 = 530;
  EditField(h1,v=vm,80,"Kainoraštis",Normal,PriceList,false,PLDefSClass);
  EditField(h1,v+=vs,80,"Nuolaidų lentelė",ViewOnly,RebCode,false,0); 
//  EditField(h2,v+=vs,80,"Disc %",ViewOnly,DiscPerc,false,0);
//  EditField(h2,v+=vs,80,"Disc Amnt",ViewOnly,DiscSum,false,0);
  EditField(h1,v+=vs,80,"Faktūra kam",Normal,InvoiceToCode,false,CUSClass);
  if (StandardHansa==false) then begin
  EditField(h1,v+=vs,80,"Kreditinė kortelė",Normal,CreditCard,false,CreditCardSClass);
  EditField(h1,v+=vs,80,"Autorizacija",Normal,AuthorizationCode,false,0);
  end;
  EditField(h1,v+=vs,-20,"Komentaras",Normal,Comment,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Comment2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Comment3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,Comment4,false,0);
  EditField(h1,v+=vs,-20,"Faktūra",Normal,BankCode,false,BankSClass);
  v = vm;
  if (HasSalesGroup) then begin
    EditField(h2,v,80,"Pard. grupė",Normal,SalesGroup,false,SalesGroupSClass); 
    v = v + vs;
  end;
  EditField(h2,v,80,"Kalba",Normal,LangCode,false,LangSClass); 
  if (StandardHansa==false) then begin
    EditField(h2,v+=vs,80,"Komisiniai",Normal,Commision,true,0); 
    EditField(h2,v+=vs,80,"Viso įtr. komisinius",ViewOnly,SumIncCom,true,0); 
  end;
  if (HasTREO) then begin
    EditField(h3,v=vm,80,"TREO nr.",Normal,TREONr,false,0);
  EditField(h3,v+=vs,80,"TREO galioj. data",Normal,TREOExpDate,false,PasteCurDate);
  end;
  Tile(6,250,false,"6",Addr1);
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Invoice"; end; //!!SAMETRANSLATION
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Adresas"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs, -20,label,Normal,InvAddr4,false,0);
  EditField(h,vm=(v+=vs),80,"Šalis",Normal,InvCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin  
    EditField(h2-89,v,232,"",ViewOnly,InvCountryName,false,0); 
    h5 = -170;
    width = 150;
  end else begin
    h5 = -270;
    width = 135;
  end;
  if (HasApprovals) then begin
    SoftEditField(h3=h+4,v=(vm+=40),123,"Patvirtinimo būsena",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255);
/*  
		ButtonFrame(h3=h+4,v=(vm+=40),123,6,"Patvirtinimo būklė");
		RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nereikalaujama",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nepradėta",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Nereikalauta",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Laukiama",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Patvirtinta",AcceptanceStatus);
		RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Atmesta",AcceptanceStatus);  
*/    
    v = VATZoneButtonsLabelslit(h3=290,v=vm,170,16);
  end else begin
    v = VATZoneButtonsLabelslit(h3=290,v=vm+20,170,16);
  end;
  EditField(h2=-170,v=vm,150,"Regionas",Normal,Region,false,RegionSClass); 
  EditField(h2,v+=vs,150,"PVM Reg. Nr.",Normal,VATNr,false,0);
  EditField(h2,v+=vs,150,"GLN",ViewOnly,RecipientGLN,false,0); //!!SAMETRANSLATION
  EditField(h2,v+=vs,150,"Telefonas",Normal,Phone,false,0);
  EditField(h2,v+=vs,150,"Faksas",Normal,Fax,false,0);
  Tile(7,170,false,"7",ShipAddr0);
  if (StandardHansa==false) then begin
  EditField(h1,v=6,80,"Adreso kd.",Normal,DelAddrCode,false,DelAddr3SClass);
  EditField(h1,v+=vs,-20,"Siuntimas",Normal,ShipAddr0,false,0);
  end else begin
    EditField(h1,v=6,-20,"Siuntimas",Normal,ShipAddr0,false,0); 
  end;
  EditField(h1,v+=vs,-20,"Adresas",Normal,ShipAddr1,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
  EditField(h1,v+=vs,80,"Šalis",Normal,DelCountry,false,CountrySClass);
  if (HasLocalization("BRA")) then begin  
    EditField(h1+91,v,232,"",ViewOnly,DelCountryName,false,0); 
    h5 = -170;
    width = -20;
  end;  
  EditField(h2,v,150,"Siuntimo GLN",ViewOnly,DelRecipientGLN,false,0);
//  EditField(h1+200,v,80,"#VAT Code#",Normal,CustVATCode,false,0);
  EnterSkip(OrdDate);
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Užsakymo būklė",'r',5,"ORInfoRnORDsm"); 
    SpecialMenu("Prekės būklė",'I',2,"ItemStatusORDsm"); 
    SpecialMenu("Sukurti Siuntimą",'L',0,"SHFromORDsm"); 
    SpecialMenu("Sukurti faktūrą",'F',1,"IVFromORDsm"); 
    SpecialMenu("Pridėti tarp. sumą",' ',14,"SubtotalORDsm");
/*
email not working yet
    SpecialMenu("Create E-Mail",'m',11,"CreateMailFromORDsm"); 
*/    
  end else begin
  SpecialMenu("Perskaičiuoti nuolaidą",' ',11,"RecalcDiscountORDsm"); 
  if (StandardHansa==false) then begin
  SpecialMenu("Perskaičiuoti svorį ir tūrį",' ',10,"RecalculateWeightORDsm");
  end;
  if (HasLocalization("CAN,USA")) then begin
    SpecialMenu("Get Tax Rates",' ',0,"ORGetTaxRates2Dsm"); //!!SAMETRANSLATION
  end;

  SpecialMenu("Atnaujinti valiutinių kainoraščių prekes",' ',7,"UpdatePricesORDsm");
  SpecialMenu("Prekės paieška",'f',1,"ItemSearchDsm");
  SpecialMenu("Užsakymo būklė",'r',5,"ORInfoRnORDsm");
  if (HasTaxMatrix) then begin
    SpecialMenu("Atidaryti mok. matricą",' ',25,"OpenVatMatrixORDsm"); 
  end;
  if (StandardHansa==false) then begin
  	SpecialMenu("Spausdinti vidinį užsakymą",' ',4,"Or2FormORDsm");
  end;
  SpecialMenu("Rezervacijos",' ',15,"OrderReservORDsm");
  if (GuiType==kGuiiPhone) then begin
    SpecialMenu("Parašas",' ',10,"SignORDsm");
  end;
  
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
//  SpecialMenu("Sukurti veiklą",'c',9,"CreateActFromORDsm");
  SpecialMenu("Sukurti siuntimą",'L',0,"SHFromORDsm");
  if (HasDownpayments) then begin
  SpecialMenu("Sukurti išankstinio apmok. faktūrą",' ',3,"DownPayFromORDsm");
  end;
  if (HaseMail or IsEnterprise) then begin
  	SpecialMenu("Sukurti el. laišką",'m',11,"CreateMailFromORDsm");
	end;
  SpecialMenu("Sukurti faktūrą",'F',1,"IVFromORDsm");
  if (HasModTS or IsEnterprise) then begin
  SpecialMenu("Sukurti projektą",' ',9,"CreatePRFromORDsm");
  SpecialMenu("Sukurti projekto biudžetą",' ',10,"CreateTBBUFromORDsm");
    end;
    SpecialMenu("Sukurti pirkimo užsakymą",' ',4,"POFromORDsm");
  SpecialMenu("Sukurti grąžinimą",'B',6,"RetFromORsm");
  SpecialMenu("Sukurti sandėlio perkėlimą",' ',8,"StockMovFromORDsm");
  if (HasApprovals) then begin
    SpecialMenu("Siųsti patvirtinimui",' ',6,"ORSendforAcceptanceORDsm");
    SpecialMenu("Atšaukti patvirtinimo užklausą",' ',2,"CancelApprovalRequestDsm");
  end;
  SpecialMenu("Pridėti pirkėją",' ',0,"AddCustomerORDsm");
  SpecialMenu("Pridėti prekę",' ',0,"AddItemORDsm");  
  end;
  EndWindow;
end;

window QTDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h1,h2,h3,h4,h5,t,v,vm,vs,width;
  string 255 label;
  Integer f,flipnr,tilenr,rn;

  WindowBegin("Pasiūlymas",QTDClass,CGview,-);
  SetWRect(20,80,750,460);
  Sizeable(-1,-1,0,0);
  UseView(QTVc);
  ActiveFieldOnNew("CustCode");
  if (HasCommunicator) then begin 
  CommunicateButton;
  end;
  Tile(0,74,false,"",CustCode);
  EditField(75,vm=(v=6),95,"Nr.",Normal,SerNr,false,TSerSClass);
  EditField(75,v+=20,95,"Pirkėjas",Normal,CustCode,false,LeadCUSClass);
  EnterSkip(PayDeal);
  EditField(h=255,v=vm,-40,"Pavadinimas",Normal,Addr0,false,0);
  if (HasOfficialSerNr) then begin
  EditField(h,v+=20,150,"Oficialus Nr.",ViewOnly,ProformaOfficialSerNr,ViewOnly,LegalInvNrSClass); 
  end;
  tilenr = 1;
  TileButton(tilenr,"Sąlygos"); tilenr = tilenr + 1; 
  TileButton(tilenr,"Prekės"); tilenr = tilenr + 1; 
  if (HasMultiCurrency or HasBase2) then begin
    TileButton(tilenr,"Valiuta"); tilenr = tilenr + 1; 
  end;
  if (IsEnterprise) then begin
    TileButton(tilenr,"Siunt. sąl."); tilenr = tilenr + 1; 
  end;
//??
  if (HasPriceLists) then begin
  TileButton(tilenr,"Kainoraštis"); tilenr = tilenr + 1; 
  end else begin
  TileButton(tilenr,"Fakt. adresas"); tilenr = tilenr + 1; 
  end;
  if (HasModSL) then begin
  TileButton(tilenr,"Fakt. adresas"); tilenr = tilenr + 1; 
  end else begin
    TileButton(tilenr,"Adresas"); tilenr = tilenr + 1; 
  end;
  if (HasModSO or HasModIN) then begin
    TileButton(tilenr,"Siunt. adresas"); tilenr = tilenr + 1; 
  end;
  if (HasModTS) then begin
    TileButton(tilenr,"Projektų valdymas"); tilenr = tilenr + 1; 
  end;
  tilenr = 1;
  Tile(tilenr,110,false,tilenr,QTDate); tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -90;
  EditField(h1,vm=(v=6),82,"Data"  ,Normal,QTDate,false,PasteCurDate); 
  EditField(h1,v+=vs,35,"Mok. terminas",Normal,PayDeal,false,PDSClass);
  if (HasAdvancedCRM) then begin
    EditField(h1,v+=vs,82,"Galioja iki",Normal,ValidUntilDate,false,PasteCurDate); 
  end;
  EditField(h1,v+=vs,82,"Susisiekti",Normal,MakeContactDate,false,PasteCurDate);
  EditField(h1,v+=vs,82,"Sprend. data",Normal,RejectDate,false,PasteCurDate);
  EditField(h2,v=vm,135,"Mūsų nuoroda",Normal,OurContact,false,0);
  EditField(h2,v+=vs,135,"Kont. asmuo",Normal,CustContact,false,ContactSClass);
  EditField(h2,v+=vs,135,"Nuoroda",Normal,RefStr,false,0);
  if (HasObjects) then begin
  EditField(h2,v+=vs,135,"Objektai",Normal,Objects,false,ObjSClass);
  end;
  EditField(h2,v+=vs,70,"Apmokamas %",Normal,PPVal,false,0);// Edit ************************** BPI Ukraine - KramarAlexandr - 03, 16 01 2019 y. at 11:26:12 AM

  v = vm;
  if (HasSalesman or HasSalesmanBonus or HasStandardCRM) then begin
    EditField(h3,v,80,"Pardavėjas",Normal,SalesMan,false,UserSClass); v = v + vs;
  end;
  if (HasModTS or IsEnterprise) then begin
    EditField(h3,v,80,"Projektas",Normal,PRCode,false,PRSClass); v = v + vs;
  end;
  EditField(h3,v,80,"Pasiūlymo klasė",Normal,QuoteClass,false,QuoteClassSClass); v = v + vs;
  EditField(h3,v,80,"Tikimybė",Normal,Probability,false,0); v = v + vs;
  if (HasStandardCRM) then begin
    EditField(h3,v,80,"Prioritetas",Normal,Priority,false,0); v = v + vs;
  end;
  ButtonFrame(h4,v=15,80,3,"Būklė");
  RadioButton(h4,v,0,0,"Atviras",Rejected);
  RadioButton(h4,v+=16,2,255,"Priimtas",Rejected);
  RadioButton(h4,v+=16,1,255,"Atmestas",Rejected);
  if (HasStandardCRM) then begin
  CheckBox(h4,v+=24,0,"Uždarytas",Closed);
  end;
  EnterSkip(Math);
  Tile(tilenr,220,true,tilenr,Math);  tilenr = tilenr + 1;
  if (HasMultiCurrency or HasBase2) then begin
    EditField(55,-41,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass); 
  end;
  if (UseTaxTemplatesforTaxCalc==false) then begin
  if (UserCanAction("ViewCostPrice",true)) then begin
    EditField(160,-41,70,"BP %",ViewOnly,GPProc,true,0);
    EditField(160,-21,70,"Viso BP",ViewOnly,TotGP,true,0);
  end;
    if (HasLocalization("GBR,LTU,POL,LVA")) then begin
      EditField(310,-41,50,"Reversinis PVM",ViewOnly,RvrsVAT,true,0);
      EditField(290,-21,70,"Ext. mok.",ViewOnly,TAX1Sum,true,0);
    end else begin
    if (HasExtTax) then begin
  EditField(290,-41,70,"Mok. 2",ViewOnly,TAX2Sum,true,0);
  EditField(290,-21,70,"Pap. mok.",ViewOnly,TAX1Sum,true,0);
    end;
  end;
  EditField(410,-41,100,"PVM",ViewOnly ,Sum3,true,0);
  end else begin
    if (UserCanAction("ViewCostPrice",true)) then begin
      EditField(290,-41,70,"BP %",ViewOnly,GPProc,true,0); 
      EditField(290,-21,70,"Viso BP",ViewOnly,TotGP,true,0); 
    end;
      EditField(410,-41,100,"Mok.",ViewOnly ,Sum3,true,0);
  end;
  if (HasMultiCurrency or HasBase2) then begin
  EditField(410,-21,100,"Suma",ViewOnly,BaseSum4,true,0);
  end;
  EditField(-150,-41,100,"Tarp. suma",ViewOnly ,Sum1,true,0);
  EditField(-150,-21,100,"VISO",ViewOnly ,Sum4,true,0);
  v = 24;
  if (HasObjects or HasModNL) then begin
    MatrixBegin(3,v,-45,-49,-,200);
  end else begin
    MatrixBegin(3,v,-20,-49,-,200);
  end;
  MatTypedRow(stp);
  Flip(0);
  MatCol(t=1,32,"Prekė",0,ArtCode,false,ForSaleINSClass);
//  MatCol(t,94,"Įvair.",0,VARList,true,VARSClass);
//  MatCol(t,144,"Kiekis",0,Quant,true,0);
  if (HasVarieties) then begin
  MatCol(t,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Kiekis",0,Quant,true,0); 
  end;
  EnterSkip(ArtCode);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,32,"Prekė",0,ArtCode,false,ForSaleINSClass);
  if (HasVarieties) then begin
  MatCol(t,94,"Kiekis",0,Quant,true,MATVARINSClass);
  end else begin
    MatCol(t,94,"Kiekis",0,Quant,true,0); 
  end;
  EnterSkip(ArtCode);
  if (GuiType==kGuiiPhone) then begin
    MatCol(t=9,100,"Tarp. suma",0,Spec,false,0); 
    MatCol(t,347,"Suma",0,Sum,true,0); 
  end else begin
  MatText(t=9,32,"Tarp. suma",true);
  MatCol(t,100,"",0,Spec,false,0);
  MatCol(t,-80,"Suma",0,Sum,true,0);
  end;
  MatText(t=10,32,"Ši eilutė ir visos eil. žemiau nebus matomos atspausd. dokumente",false);
  if (GuiType==kGuiiPhone) then begin
    MatCol(t=17,-300,"Antraštė",0,Spec,false,0); 
  end else begin
  MatText(t=17,32,"Antraštė",true);
  MatCol(t,100,"",0,Spec,false,0);
  end;
  MatText(t=kInvoiceRowTypePerceptionTax,32,"Percepcijos mok.",true);
  MatCol(t,132,"",0,Region,false,0);
  MatCol(t,252,"",0,TAX2Prc,true,0);
  MatCol(t,292,"",0,Sum,true,0);
  MatCol(t,372,"",0,SalesAcc,false,0);
  MatCol(t,452,"",0,Spec,false,0);
  flipnr = 1;
  Flip(flipnr); flipnr = flipnr + 1;
//  MatCol(t=1,194,"Aprašymas",0,Spec,false,0);
  t = 1;
  MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  if (HasModNL or HasObjects) then begin
  MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-235,"Vieneto kaina",0,Price,true,0);
  MatCol(t,-135,"%",0,vRebate,true,0);
  MatCol(t,-100,"Suma",0,Sum,true,0);
    Flip(flipnr); flipnr = flipnr + 1;
  MatCol(t=1,144,"Aprašymas",0,Spec,false,0);
  if (UseTaxTemplatesforTaxCalc) then begin
      if (HasCustItem) then begin
    MatCol(t,-284,"Pirk. prekės nr.",0,CustArtCode,false,CUINSClass); 
      end;
      if (HasModNL) then begin
    MatCol(t,-224,"Sąskaita",0,SalesAcc,false,AccSClass); 
      end;
      if (HasObjects) then begin
    MatCol(t,-164,"Objektas",0,Objects,false,ObjSClass);
      end;
    MatCol(t,-60,"M. kd.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
      if (HasCUstItem) then begin
    MatCol(t,-264,"Pirk. prekės nr.",0,CustArtCode,false,CUINSClass); 
      end;
      if (HasModNL) then begin
    MatCol(t,-184,"Sąskaita",0,SalesAcc,false,AccSClass); 
      end;
      if (HasObjects) then begin
    MatCol(t,-124,"Objektas",0,Objects,false,ObjSClass);
      end;
      if (HasLocalization("GBR,LTU,POL,LVA")) then begin
        MatCol(t,-60,"PVM-K",0,VATCode,false,VATCodeSClass);
        MatCol(t,-30,"Revers",0,RvrsVATCode,false,VATCodeSClass); 
      end else begin
    MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
      end;
  end;
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  if (UseTaxTemplatesforTaxCalc) then begin
      if (HasCustItem) then begin
    MatCol(t,-284,"Pirk. prekės nr.",0,CustArtCode,false,CUINSClass); 
      end;
      if (HasModNL) then begin
    MatCol(t,-224,"Sąskaita",0,SalesAcc,false,AccSClass); 
      end;
      if (HasObjects) then begin
    MatCol(t,-164,"Objektas",0,Objects,false,ObjSClass);
      end;
    MatCol(t,-60,"M. kd.",0,TaxTemplateCode,false,TaxTemplateSClass);
  end else begin
      if (HasCustItem) then begin
    MatCol(t,-264,"Pirk. prekės nr.",0,CustArtCode,false,CUINSClass); 
      end;
      if (HasModNL) then begin
    MatCol(t,-184,"Sąskaita",0,SalesAcc,false,AccSClass); 
      end;
      if (HasObjects) then begin
    MatCol(t,-124,"Objektai",0,Objects,false,ObjSClass);
      end;
      if ((HasLocalization("GBR,LTU,POL") and IsEnterprise) or HasLocalization("LVA")) then begin
        MatCol(t,-60,"PVM-K",0,VATCode,false,VATCodeSClass); 
        MatCol(t,-30,"Revers",0,RvrsVATCode,false,VATCodeSClass); 
      end else begin
    MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass);
      end;
  end;
  end else begin
    if (UseTaxTemplatesforTaxCalc) then begin
      MatCol(t,-295,"Vnt. kaina",0,Price,true,0); 
      MatCol(t,-195,"%",0,vRebate,true,0); 
      MatCol(t,-160,"Suma",0,Sum,true,0); 
      MatCol(t,-60,"PVM-kd",0,TaxTemplateCode,false,TaxTemplateSClass); 
      MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0); 
      MatCol(t,-295,"Vnt. kaina",0,Price,true,0); 
      MatCol(t,-195,"%",0,vRebate,true,0); 
      MatCol(t,-160,"Suma",0,Sum,true,0); 
      MatCol(t,-60,"PVM kd.",0,TaxTemplateCode,false,TaxTemplateSClass); 
    end else begin
      MatCol(t=1,-265,"Vnt. kaina",0,Price,true,0); 
      MatCol(t,-165,"%",0,vRebate,true,0); 
      MatCol(t,-130,"Suma",0,Sum,true,0); 
      MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass); 
      MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0); 
      MatCol(t,-265,"Vnt. kaina",0,Price,true,0); 
      MatCol(t,-165,"%",0,vRebate,true,0); 
      MatCol(t,-130,"Suma",0,Sum,true,0); 
      if ((HasLocalization("GBR,LTU,POL,LVA") and IsEnterprise) or HasLocalization("LVA")) then begin
        MatCol(t,-60,"PVM-K",0,VATCode,false,VATCodeSClass); 
        MatCol(t,-30,"Revers",0,RvrsVATCode,false,VATCodeSClass); 
      end else begin
      MatCol(t,-30,"PVM kd.",0,VATCode,false,VATCodeSClass); 
      end;
    end;
  end;
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    t = 1;
    MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  MatCol(t,-235,"Vieneto kaina",0,Price,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-175,"%",0,vRebate,true,0);
    MatCol(t,-140,"Savikaina",0,BasePrice,true,0);
    MatCol(t,-70,"BP",0,rowGP,true,0);
  end else begin
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Suma",0,Sum,true,0);
  end;
//  MatCol(t,-100,"FIFO",0,FIFO,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-235,"Vnt. kaina",0,Price,true,0);
  if (UserCanAction("ViewCostPrice",true)) then begin
    MatCol(t,-175,"%",0,vRebate,true,0);
    MatCol(t,-140,"Savikaina",0,BasePrice,true,0);
    MatCol(t,-70,"BP",0,rowGP,true,0);
  end else begin
    MatCol(t,-135,"%",0,vRebate,true,0);
    MatCol(t,-100,"Suma",0,Sum,true,0);
  end;
  end;
//  MatCol(t,-100,"FIFO",0,FIFO,true,0);
  if (IsEnterprise) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    t = 1;
    MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  MatCol(t,-340,"Pardavėjas",0,Salesmen,false,UserSClass); 
  MatCol(t,-280,"Faktūruota",0,Invd,true,0); 
  MatCol(t,-230,"Vnt. kaina",0,Price,true,0); 
  MatCol(t,-150,"Kainos faktorius",0,PriceFactor,true,0); 
  MatCol(t,-70,"Gaminys",0,Recepy,false,RecSClass);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-340,"Vieneto kaina",0,Price,true,0);
  MatCol(t,-262,"Kainos faktorius",0,PriceFactor,true,0);
  MatCol(t,-170,"",0,MotherArtCode,false,0);
  MatCol(t,-100,"",0,RecipeQuant,false,0);
  MatCol(t,-70,"Ruošinys",0,Recepy,false,RecSClass);
    Flip(flipnr); flipnr = flipnr + 1;
    t = 1;
    MatCol(t,144,"Aprašymas",0,Spec,false,0); 
  MatCol(t,-315,"Vnt.",0,UnitCode,false,UnitSClass);
  MatCol(t,-270,"Vnt. kiekis",0,UnitFactQuant,true,0);
  MatCol(t,-215,"Plotis",0,UnitXval,true,0);
  MatCol(t,-170,"Aukštis",0,UnitYval,true,0);
  MatCol(t,-125,"Gylis",0,UnitZval,true,0);
  MatCol(t,-80,"Vnt. egz. kaina",0,UnitFactPrice,true,0);
    MatCol(t=kInvoiceRowTypeStructuredItemComponent,144,"Aprašymas",0,Spec,false,0);
  MatCol(t,-315,"Vnt.",0,UnitCode,false,UnitSClass);
  MatCol(t,-270,"Vnt. kiekis",0,UnitFactQuant,true,0);
  MatCol(t,-215,"Plotis",0,UnitXval,true,0);
  MatCol(t,-170,"Aukštis",0,UnitYval,true,0);
  MatCol(t,-125,"Gylis",0,UnitZval,true,0);
  MatCol(t,-80,"Vnt. kaina",0,UnitFactPrice,true,0);
  end;
  if (HasModTS) then begin
    Flip(flipnr); flipnr = flipnr + 1;
    if (IsEnterprise) then begin
  MatCol(t=1,-490,"Fazė",0,PRStage,false,PRStageSClass);
    end;
    MatCol(t=1,-440,"Asmuo",0,EMCode,false,UserSClass); 
    if (IsEnterprise) then begin
  MatCol(t,-390,"Grupė",0,JobGroup,false,EGSClass);
  MatCol(t,-340,"Laiko klasė",0,TimeClass,false,TimeClassSClass);
    end;
  MatCol(t,-280,"pažyma",0,Markup,true,0);
  MatCol(t,-230,"Tipas",0,BudType,true,SetSClass);
  MatCol(t,-190,"Fakt. vėliau",0,InvAfter,true,PasteCurDate);
  MatCol(t,-120,"Fakt. data",0,InvDate,true,PasteCurDate);
  MatCol(t,-50,"Fakt. nr.",0,Invoiced,true,0);
  MatCol(t=kInvoiceRowTypeStructuredItemComponent,-490,"Fazė",0,PRStage,false,PRStageSClass);
  MatCol(t,-440,"Asmuo",0,EMCode,false,UserSClass);
    if (IsEnterprise) then begin
  MatCol(t,-390,"Grupė",0,JobGroup,false,EGSClass);
  MatCol(t,-340,"Laiko klasė",0,TimeClass,false,TimeClassSClass);
    end;
  MatCol(t,-270,"pažyma",0,Markup,true,0);
  MatCol(t,-220,"Tipas",0,BudType,true,SetSClass);
  MatCol(t,-170,"Fakt. po",0,InvAfter,true,PasteCurDate);
  MatCol(t,-110,"Fakt. data",0,InvDate,true,PasteCurDate);
  MatCol(t,-50,"Fakt. nr.",0,Invoiced,true,0);
  end;
  DeleteRowTest;
  InsertRowTest;
  RowMenuBegin("");
  if (HasModIN) then begin
    RowMenuItem(0,"Prekės būklė",'I','I',0,"ItemStatusQTDsm");
  end;
  RowMenuItem(0,"Ankstesnė pardavimo kaina",' ',' ',0,"QTLastSPrsm");
  RowMenuItem(0,"Pridėti antraštės eilutę",' ',' ',0,"QTAddHeaderLine");
  RowMenuItem(0,"Pridėti paslėptą liniją",' ',' ',0,"QTAddHidLine");
  RowMenuItem(0,"Pridėti tarpinę sumą",' ',' ',0,"SubtotalQTDsm");
  if (StandardHansa==false) then begin
    RowMenuItem(0,"Vadovo nuolaid. pakeitimas",' ',' ',0,"MgrsDiscOverrideQTDsm"); 
  end;
  EndRowMenu;
  EndMatrix;
  vs = 20;
  v = 18;
  if (flipnr>2) then begin
    for (f=1;f<flipnr;f=f+1) begin
      VTab(-31,v,-12,v+vs,ToolFlip,f,chr(asc("A") + f - 1)); //!!SAMETRANSLATION
      v = v + vs;
    end;
  end;

  if (HasMultiCurrency or HasBase2) then begin
    Tile(tilenr,70,false,tilenr,FrRate);  tilenr = tilenr + 1;
  vs = 20;
    if (HasBase2) then begin
      h1 = h1 + 20;
    end;
  EditField(h1,v=6,50,"Valiuta",Normal,CurncyCode,false,CurncyCodeSClass);
    if (HasMultiCurrency) then begin
    if (HasBase2) then begin
        EditField(h1,v+vs,50,"Bazinė valiuta 1",Normal,BaseRate1,true,0);
    end else begin
        EditField(h1,v+vs,50,"Baz. valiuta",Normal,BaseRate1,true,0);
      end;
      if (HasBase2) then begin  
        EditField(h1,v+(vs*2),50,"Baz. val. 2",Normal,BaseRate2,true,0); 
      end;
      EditField(h2=295,v,50,"Kursas",Normal,FrRate,true,0); 
      if (HasBase2) then begin  
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val. 1",false);  //!!SAMETRANSLATION
        RateField(h3,v+=vs,50,":",Normal,"ToRateB2",true,h3+60,v+14,"Baz. val. 2",false);            //!!SAMETRANSLATION
      end else begin
        RateField(h3=360,v,50,":",Normal,"ToRateB1",true,h3+60,v+14,"Baz. val.",false);      //!!SAMETRANSLATION
      end;
    end else begin
      EditField(h1,v+=vs,50,"Baz. val. 1",Normal,BaseRate1,true,0); 
      EditField(h1,v+=vs,50,"Baz. val. 2",Normal,BaseRate2,true,0); 
    end;
  end;
  if (IsEnterprise) then begin
    Tile(tilenr,110,false,tilenr,ShipDeal);  tilenr = tilenr + 1;
  vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
  EditField(h1,v=6,80,"Siuntimo sąlyga",Normal,ShipDeal,false,ShipDealSClass);
  EditField(h1,v+=vs,80,"Siuntimo būdas",Normal,ShipMode,false,DMSClass);
    if (HasRoute) then begin
  EditField(h1,v+=vs,80,"Maršrutas",Normal,Sorting,false,DelRouteSClass);
    end;
  EditField(h1,v+=vs,80,"Patalpa",Normal,Location,false,LocationSClass);
    if (StandardHansa==false) then begin
    EditField(h1,v+=vs,80,"Filialas",Normal,BranchID,false,AllCUSClass);
    end;
    EditField(h1,v+=vs,80,"Galimybė",ViewOnly,OYNr,false,0); 
  EditField(h2,v=vm,80,"Viso kiekis",ViewOnly,TotQty,true,0);
  EditField(h2,v+=vs,80,"Viso svoris",ViewOnly,TotWeight,true,0);
  EditField(h2,v+=vs,80,"Viso tūris",ViewOnly,TotVolume,true,0);
    EditField(h2,v+=vs,80,"Frahtas",Normal,FrPrice,true,0); 
    EditField(h2,v+=vs,80,"Sut. prad. data",Normal,ContractStartDate,true,0); 
    EditField(h2,v+=vs,-40,"Op. komentaras",Normal,OYDescription,false,0); 
  EditField(h3,v=vm,80,"Užsk. nr.",Normal,OrderNr,false,0);
  EditField(h3,v+=vs,80,"Plan. siunt.",Normal,PlanShip,false,PasteCurDate);
  EditField(h3,v+=vs,80,"Dienos iki siunt.",Normal,DaysToDelivery,false,0);
//    EditField(h3,v+=vs,80,"Intrastat Transaction Code",Normal,IntrastatTransCode,false,IntrastatTransCodeSClass);
    EditField(h3,v+=vs,80,"Gabenimo PVM-k",Normal,FrVATCode,true,VATCodeSClass);
    CheckBox(h3-30,v+=20,0,"Neleisti faktūruoti daugiau nei pasiūlyme",DisallowInvoicemorethanQuoted); 
  end;
  if (HasPriceLists) then begin
    Tile(tilenr,110,false,tilenr,PriceList);  tilenr = tilenr + 1;
    v = vm;
    if (HasPriceLists) then begin
      EditField(h1,v,80,"Kainoraštis",Normal,PriceList,false,PLDefSClass);
    if (IsEnterprise==false and HasLanguages) then begin
        EditField(h2,v,80,"Kalba",Normal,LangCode,false,LangSClass);
      end;
      v = v + vs;
    end else begin
      if (IsEnterprise==false and HasLanguages) then begin
        EditField(h1,v,80,"Kalba",Normal,LangCode,false,LangSClass); v = v + vs; 
      end;
    end;
    if (HasAdvancedPricing) then begin
      if (IsEnterprise==false) then begin vm = v; end;
      EditField(h1,v,80,"Nuol. lent.",Normal,RebCode,false,RebSClass); v = v + vs;
    end;
    if (IsEnterprise) then begin
      EditField(h1,v,80,"Faktūra kam",Normal,InvoiceToCode,false,CUSClass); v = v + vs; 
      if (StandardHansa) then begin
        EditField(h1,v,80,"Originalus pirkėjas ",Normal,OrgCust,false,AllCUSClass); 
        EditField(h2,v,80,"Kalba",Normal,LangCode,false,LangSClass); v = v + vs; 
      end else begin
      EditField(h1,v,80,"Pirkėjas",Normal,OrgCust,false,AllCUSClass); v = v + vs; 
      end;
    end;
  end else begin
    Tile(tilenr,110,false,tilenr,Comment);  tilenr = tilenr + 1;
    v = vm;
  end;
  EditField(h1,v,-20,"Komentaras",Normal,Comment,false,0); v = v + vs;
  if (HasModSVO or IsEnterprise) then begin
    EditField(h1,v,-20,"",Normal,Comment2,false,0); v = v + vs; 
    EditField(h1,v,-20,"",Normal,Comment3,false,0); v = v + vs; 
    EditField(h1,v,-20,"",Normal,Comment4,false,0); v = v + vs; 
  end;
  if (IsEnterprise) then begin  
    v = vm; 
  end else begin
    if (HasAdvancedPricing==false) then begin
    h2 = h1;
    end;
  end;
  if (HasSalesMan and StandardHansa==false) then begin
    EditField(h2,v=vm,80,"Pardavimų grupė",ViewOnly,SalesGroup,false,SalesGroupSClass);
    if ((HasLanguages and HasPriceLists==false) or IsEnterprise) then begin
      EditField(h2,v+=vs,80,"Kalba",Normal,LangCode,false,LangSClass);
  end;
  end;  
  if (HasExtTax) then begin
  EditField(h2,v+=vs,80,"Mok. suma",ViewOnly,TAX1Sum,true,0);
  end;
  if (HasModSVO) then begin
    EditField(h2,v+=vs,80,"Psl. Užsk. Nr.",ViewOnly,SVOSerNr,true,0); 
  end;
  Tile(tilenr,250,false,tilenr,Addr1);  tilenr = tilenr + 1;
  label = UserDefined("CUVc","InvAddr0");
  if (blank(label)) then begin label = "Faktūra"; end;
  EditField(h=110,v=6,-20,label,Normal,Addr1,false,0);
  label = UserDefined("CUVc","InvAddr1");
  if (blank(label)) then begin label = "Adresas"; end;
  EditField(h,v+=vs, -20,label,Normal,Addr2,false,0);
  label = UserDefined("CUVc","InvAddr2");
  EditField(h,v+=vs, -20,label,Normal,Addr3,false,0);
  label = UserDefined("CUVc","InvAddr3");
  EditField(h,v+=vs, -20,label,Normal,InvAddr3,false,0);
  label = UserDefined("CUVc","InvAddr4");
  EditField(h,v+=vs, -20,label,Normal,InvAddr4,false,0);
  h5 = 290; width = 135; 
  if (HasCountryPerCustomer) then begin
  EditField(h,vm=(v+=vs),50,"Šalis",Normal,InvCountry,false,CountrySClass);
    if (HasLocalization("BRA")) then begin  
      EditField(h1+61,v,232,"",ViewOnly,InvCountryName,false,0); 
      h5 = -170;
      width = -20;
  end;
  end;
  if (IsEnterprise) then begin
  	EditField(h,v+=vs,width,"Sąsk. operat.",Normal,BankCode,false,BankSClass);
  vm = v;
  end else begin
    if (HasApprovals==false) then begin
      vm = v+2*vs;
    end;
  end;
  if (HasApprovals) then begin
    SoftEditField(h3=h+4,v=(vm+=40),123,"Patvirt. statusas",ViewOnly,"AcceptanceStatusFlag",false,0,M4Str,255); 
  end;
/*
//oldapprovals  
  if (HasApprovals) then begin
  ButtonFrame(h3=h+4,v=(vm+=40),123,6,"Patvirtinimo būklė");
  RadioButton(h3,v,kAcceptanceStateNotRequired,0,"Nereikalaujama",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotStarted,0,"Nepradėta",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateNotRequested,0,"Neprašoma",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStatePending,0,"Laukiama",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateApproved,0,"Patvirtinta",AcceptanceStatus);
  RadioButton(h3,v+=16,kAcceptanceStateRejected,0,"Atmesta",AcceptanceStatus);  
  end;
*/  
  if (HasVATZone) then begin
    if (StandardHansa==false) then begin
      v = VATZoneButtonsLabelslit(h3=290,v=vm,170,16);
    end else begin
      v = VATZoneButtonsLabelslit(h3=290,v=vm+40,170,16);
    end;
  end;
  if (IsEnterprise) then begin
  EditField(h2=-170,v=vm,150,"Regionas",Normal,Region,false,RegionSClass); 
  EditField(h2,v+=vs,150,"PVM Reg. Nr.",Normal,VATNr,false,0);
  EditField(h2,v+=vs,150,"Telefonas",Normal,Phone,false,0);
  EditField(h2,v+=vs,150,"Faksas",Normal,Fax,false,0);
  end;
  if (HasModSO or HasModIN) then begin
    v = 6; h1 = 110;
    Tile(tilenr,170,false,tilenr,ShipAddr0);  tilenr = tilenr + 1;
    if (IsEnterprise and StandardHansa==false) then begin
    EditField(h1,v,80,"Adreso kd.",Normal,DelAddrCode,false,DelAddr3SClass); 
    v = v + vs;
  end;
  EditField(h1,v,-20,"Pristatymas",Normal,ShipAddr0,false,0); 
  EditField(h1,v+=vs,-20,"Adresas",Normal,ShipAddr1,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr2,false,0);
  EditField(h1,v+=vs,-20,"",Normal,ShipAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr3,false,0);
  EditField(h1,v+=vs,-20,"",Normal,DelAddr4,false,0);
    if (HasCountryPerCustomer) then begin
  EditField(h1,v+=vs,80,"Šalis",Normal,DelCountry,false,CountrySClass);
      if (HasLocalization("BRA")) then begin  
        EditField(h1+91,v,232,"",ViewOnly,DelCountryName,false,0); v = v + vs; 
      end;      
  end;
  EnterSkip(QTDate);
  end;
  if (HasModTS) then begin
    Tile(tilenr,115,false,tilenr,Markup);  tilenr = tilenr + 1;
    vs = 20; h1 = 110; h2 = 290; h3 = 530; h4 = -100;
    if (IsEnterprise) then begin
  ButtonFrame(h1,v=18,120,2,"Faktūruoti laiką");
  RadioButton(h1,v,0,0,"Faktinis",BudTime);
  RadioButton(h1,v+=16,1,255,"Pagal pasiūlymą",BudTime);

  ButtonFrame(h1,v+=40,120,2,"Faktūruoti pirkimus");
  RadioButton(h1,v,0,0,"Faktinis",BudOther);
  RadioButton(h1,v+=16,1,255,"Pagal pasiūlymą",BudOther);

  ButtonFrame(h2,v=18,120,2,"Faktūruoti medžiagas");
  RadioButton(h2,v,0,0,"Faktinis",BudMaterial);
  RadioButton(h2,v+=16,1,255,"Pagal pasiūlymą",BudMaterial);

  ButtonFrame(h2,v+=40,120,2,"Faktūruoti sand. prek.");
  RadioButton(h2,v,0,0,"Faktinis",BudStocked);
  RadioButton(h2,v+=16,1,255,"Pagal pasiūlymą",BudStocked);
    end else begin
      ButtonFrame(h1,v=18,120,2,"Invoice");  //!!SAMETRANSLATION
      RadioButton(h1,v,0,0,"Faktinis",BudOther); 
      RadioButton(h1,v+=16,1,255,"Pagal pasiūlymą",BudOther); 
    end;

  EditField(h3,v=6,80,"Žymėjimas",Normal,Markup,false,0);
    if (IsEnterprise) then begin
  EditField(h3,v+=vs,80,"Viso laiko",Normal,SumTime,false,0);
  EditField(h3,v+=vs,80,"Viso pirkimų",Normal,SumOther,false,0);
  EditField(h3,v+=vs,80,"Viso medžiagų",Normal,SumMaterial,false,0);
  EditField(h3,v+=vs,80,"Viso prekių",Normal,SumStocked,false,0);
    end else begin
      EditField(h3,v+=vs,80,"Viso",Normal,SumOther,false,0); 
    end;
  end;
  if (GuiType==kGuiMetro) then begin // Temporarily disabled on Windows 8
    SpecialMenu("Pasiūlymo būklė",'r',3,"QTStatusDsm"); 
    if (HasModIN) then begin
      SpecialMenu("Prekės būklė",'I',1,"ItemStatusQTDsm"); 
    end;
/*email not working yet
    if (HaseMail) then begin
      SpecialMenu("Create e-mail",'m',12,"CreateMailFromQTDsm"); 
    end;
*/    
    SpecialMenu("Pridėti tarpinę sumą",' ',4,"SubtotalQTDsm"); 
    if (HasCustomerStatusReport) then begin 
    SpecialMenu("Pirkėjo būklė",'e',2,"CUStatusQTDsm"); 
    end;
    SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
    if (HasModSO) then begin
      SpecialMenu("Sukurti užsakymą",'G',9,"ORFromQTDsm");
    end;
    if (HasModSL) then begin
      SpecialMenu("Sukurti faktūrą",'F',10,"IVFromQTDsm");
    end;
  end else begin
  SpecialMenu("Prekės paieška",'f',1,"ItemSearchDsm");
  if (HasCustomerStatusReport) then begin
  SpecialMenu("Pirkėjo būklė",'e',2,"CUStatusQTDsm");
  end;
  SpecialMenu("Pasiūlymo būklė",'r',3,"QTStatusDsm");
  if (IsEnterprise) then begin
    if (HasLocalization("CAN,USA")) then begin
      SpecialMenu("Get Tax Rates",' ',0,"QTGetTaxRates2Dsm");  //!!SAMETRANSLATION
    end;
    if (StandardHansa==false) then begin
      if (HasLocalization("AGO,PRT")) then begin
        SpecialMenu("Print Proforma Invoice",' ',4,"PrintProformaInvoiceQTDsm"); //!!SAMETRANSLATION
      end;
    end;
  SpecialMenu("Perskaičiuoti nuolaidą",' ',6,"RecalcDiscountQTDsm");
    if (StandardHansa==false) then begin
  SpecialMenu("Perskaičiuoti svorį ir tūrį",' ',7,"RecalcWeightQTDsm");
    end;
  end else begin
    if (HasAvalara) then begin
      SpecialMenu("Gaukite mokesčių tarifus",' ',0,"QTGetTaxRates2Dsm"); 
    end;
    if (HasLocalization("AGO,PRT") and HasStandardCRM==false) then begin
      SpecialMenu("Print Proforma Invoice",' ',4,"PrintProformaInvoiceQTDsm");  //!!SAMETRANSLATION
    end;
  end;
  if (GuiType==kGuiiPhone) then begin
    SpecialMenu("Pasirašyti",' ',10,"SignQTDsm");
  end;
  if (HasAdvancedPricing and (HasMultiCurrency or HasBase2)) then begin
  SpecialMenu("Atnaujinti valiutinius kainoraščius",' ',8,"UpdatePricesQTDsm");
  end;
  if (HasTaxMatrix) then begin
    SpecialMenu("Atidaryti mokesčių matricą",' ',25,"OpenVatMatrixQTDsm");
  end;
  if (StandardHansa==false) then begin
    SpecialMenu("Vadovo nuolaid. keitimas",' ',24,"MgrsDiscOverrideQTDsm"); 
  end;
  if (HasApprovals) then begin
    SpecialMenu("Siųsti patvirtinimui",' ',6,"QTSendforAcceptanceQTDsm");
    SpecialMenu("Atšaukti patvirtinimo užklausą",' ',2,"CancelApprovalRequestDsm");
  end;
  SpecMenuGroup("",kSpecMenuGroupTypeExtendedPlusMenu,0);
  if (HasModSO or IsSberbankProduct) then begin
  SpecialMenu("Sukurti užsakymą",'G',9,"ORFromQTDsm");
  end;
  if (HasStandardCRM==false) or (HasModSL) then begin
  SpecialMenu("Sukurti faktūrą",'F',10,"IVFromQTDsm");
  end;
  if (HasModPOS) then begin
    if (HasLocalization("PRT")==false) then begin
      SpecialMenu("Sukurti POS faktūrą",'f',10,"IVCashFromQTDsm");
    end;
  end;
  if (HasStandardCRM) then begin
//  SpecialMenu("Sukurti veiklą",'c',11,"CreateActFromQTDsm");
  end;
  if (HaseMail or IsEnterprise) then begin
  SpecialMenu("Sukurti el. laišką",'m',12,"CreateMailFromQTDsm");
  end;
  if (HasModTS or IsEnterprise) then begin
  SpecialMenu("Sukurti projektą",' ',13,"CreatePRFromQT");
  SpecialMenu("Sukurti projekto biudžetą",' ',14,"CreateTBBUFromQTDsm");
  end;
  if (HasModSVO) then begin
    SpecialMenu("Sukurti darbo kortelę",'',14,"WSFromQTDsm");  //!!SAMETRANSLATION
  end;
  if (HasModCredMan) then begin
  SpecialMenu("Sukurti kredito sutartį",' ',15,"CreateCredManQTsm");
  end;
end;
  SpecialMenu("Pridėti pirkėją",' ',0,"AddCustomerQTDsm");
  SpecialMenu("Pridėti prekę",' ',0,"AddItemQTDsm");  
  EndWindow;
end;

window AccSVOTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,l,v,vs;
  WindowBegin("Sąskaitų panaudojimas paslaugų Užsak.",AccSVOTClass,CGSbl,SVOAccType);
  SetBlid(SVOAccBlock);
  SetWRect(20,80,430,360);
  vs = 20; h = 180; l = 70; h2 = 100;
  /* Not used anywere
  EditField(h,v=6,l,"Pardavimų sąsk.",Normal,SalesAcc,false,AccSClass);
  EditField(h,v+=vs,l,"Sandėlio sąsk.",Normal,StockAcc,false,AccSClass);//703
  EditField(h,v+=vs,l,"Paslaugų sąsk.",Normal,ServiceAcc,false,AccSClass);
  ButtonFrame(h2,v+=46,150,2,"Faktūros Užsak.");
  RadioButton(h2,v,0,0,"Paslaugų Užsak.",InvoiceSVO);
  RadioButton(h2,v+=16,1,0,"Darbo kortelės",InvoiceSVO);
  CheckBox(h2,v+=30,0,"Tekstas iš paslaugų užsakymo",SVOText);
  */
  CheckBox(h2,v+=16,0,"Darbo kortelės objektas faktūroje",WSHeaderObjectOnSVOIV);
  CheckBox(h2,v+=16,0,"Darbo kortelės atnaujina sandėlį",WSUpdStockFlag);
	CheckBox(h2,v+=16,0,"Leisti tik 1 pagrindinę prekę paslaugos užsakymui",AllowOneMainItem);
	EditField(h2+50,v+=20,50,"Pasl. Obj. Tipas",Normal,ObjTypePrefix,false,OTSClass);// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 08 02 2019 y. at 9:30:57 AM
  CheckBox(h2,v+=20,0,"Automatiškai kurti paslaugų užsakymams objektų tipus",OutoObjCreate);// Edit ************************** BPI Ukraine - KramarAlexandr - 05, 08 02 2019 y. at 9:32:22 AM

  EndWindow;
end;